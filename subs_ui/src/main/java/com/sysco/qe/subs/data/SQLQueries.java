package com.sysco.qe.subs.data;

import com.sysco.qe.subs.common.Constants;

public class SQLQueries {
    public static final String SELECT_EXCEPTION_REQUEST_DETAILS = "select * from dds.exception_request er where er .excep_request_id = '<exception_request_id>'";
    public static final String SELECT_LINE_ITEM_DETAILS = "select * from dds.exception_request_line_item where excep_request_id = '<exception_request_id>'";
    public static final String SELECT_NOTE_DETAILS = "select * from dds.exception_request_note where excep_request_line_item_id = '<exception_request_line_item_id>'";
    public static final String SELECT_CUSTOMER_DETAILS = "select * from dds.customer where customer_sysco_id = '<cus_sysco_id>' and  opco_id='<opco>'";
    public static final String SELECT_DETAILS_OF_A_SINGLE_ACTIVE_CUSTOMER = "select customer_id from dds.customer where group_id is null and status='1' and  opco_id='%s'";
    public static final String SELECT_DETAILS_OF_A_ACTIVE_CUSTOMER_IN_A_GROUP = "select customer_id from dds.customer where group_id is not null and status='1' and  opco_id='067'";
    public static final String SELECT_CUSTOMER_DETAILS_BY_CUST_REF_ID = "select * from dds.customer where customer_id = '<cus_ref_id>'";
    public static final String SELECT_CUSTOMER_DETAILS_BY_CUST_SYSCO_ID = "select * from dds.customer where customer_sysco_id = '<cus_ref_id>'";
    public static final String SELECT_CUSTOMER_DETAILS_BY_CUST_REF_ID_FOR_OPCO_19 = "select * from dds.customer where customer_id = '<cus_ref_id>' and opco_id='19'";
    public static final String SELECT_DETAILS_OF_A_SINGLE_ACTIVE_CUSTOMER_AND_NOT_IN_GIVEN_OPCO = "select customer_id from dds.customer where group_id is null and status='1' and opco_id != '<opco>'";
    public static final String SELECT_DETAILS_OF_A_SINGLE_INACTIVE_CUSTOMER = "select customer_id from dds.customer where group_id is null and status='0'";
    public static final String SELECT_DETAILS_OF_A_ACTIVE_CUSTOMER_IN_A_GIVEN_GROUP = "select customer_id from dds.customer where group_id = '<group_id>' and status='1'";
    public static final String SELECT_ITEM_DETAILS = "select * from dds.item where supc = '<supc>' and  opco_id='067' and status='1'";
    public static final String SELECT_LATEST_EXCEPTION_REQUEST_RECORD_FOR_CUSTOMER = "select * from qa.dds.exception_request where customer_id = '<cust_ref_id>' order by excep_request_id desc limit 1";
    // escalation
    public static final String SELECT_EXCEPTION_REQUEST_DETAILS_OF_SINGLE_CUSTOMER_FOR_GIVEN_STATUS = "SELECT * FROM dds.exception_request er inner join dds.exception_request_line_item eli on er.excep_request_id  = eli.excep_request_id where er.group_id is null and eli.status = '<status>' limit 1";
    public static final String SELECT_LINE_ITEM_DETAILS_FOR_GIVEN_LINE_ITEM_ID = "select * from dds.exception_request_line_item where excep_request_line_item_id = '<exception_request_line_item_id>'";
    public static final String SELECT_MULITIPLE_EXCEPTION_REQUEST_DETAILS_OF_SINGLE_CUSTOMER_FOR_GIVEN_STATUS = "SELECT* FROM dds.exception_request er inner join dds.exception_request_line_item eli on er.excep_request_id  = eli.excep_request_id " +
            "where er.group_id is null and eli.status ='<status>' limit 10";
    public static final String SELECT_EXCEPTION_REQUEST_DETAILS_OF_TWO_ITEMLINES_SINGLE_CUSTOMER_FOR_GIVEN_STATUS = "SELECT* FROM dds.exception_request er inner join dds.exception_request_line_item eli on er.excep_request_id  = eli.excep_request_id " +
            "where er.group_id is null and eli.status ='<status>' limit 2";
    public static final String SELECT_EXCEPTION_REQUEST_DETAILS_OF_GROUP_FOR_GIVEN_STATUS = "SELECT array_agg(excep_request_line_item_id), item_id,  eli.status FROM dds.exception_request er inner join dds.exception_request_line_item eli\n" +
            "           on er.excep_request_id  = eli.excep_request_id where er.group_id ='1'    and eli.status = '<status>'  and item_id='3' group by item_id, eli.status limit 1";
    public static final String SELECT_CUSTOMER_DETAILS_IN_CUSTOMER_TABLE = "select * from dds.customer where customer_name ='<customer_name>'";
    public static final String SELECT_CUSTOMER_NAME_IN_CUSTOMER_TABLE_FOR_GIVEN_OPCO = "select customer_name from dds.customer where opco_id = <opco_id>";
    public static final String SELECT_CUSTOMER_DETAILS_IN_CUSTOMER_TABLE_OPCO_067 = "select * from dds.customer where opco_id='067' and status='1'";
    public static final String SELECT_CUSTOMER_ID_IN_CUSTOMER_TABLE_FOR_GIVEN_OPCO = "select customer_id from dds.customer where opco_id = <opco_id>";
    public static final String COUNT_CUSTOMERS_IN_GROUP_CUTOMER_TABLE = "select count (customer_id) from dds.customer  where group_id='<group_id>' and status ='1'";
    public static final String COUNT_DETAILS_FROM_LINE_ITEM_TABLE = "select count(excep_request_line_item_id) from dds.exception_request_line_item   where excep_request_id  ='<excep_request_id>'";
    public static final String SELECT_DETAILS_FROM_LINE_ITEM_REVIEW_TABLE_FROM_REQUEST_ID = "select * from dds.exception_request_line_item where excep_request_id ='<excep_request_id>'";
    public static final String UPDATE_STATUS_IN_EXCEPTION_REQUEST_LINE_ITEM_TABLE = "update dds.exception_request_line_item set status =? where excep_request_id ='<excep_request_id>'";
    public static final String SELECT_LINE_ITEMS_FROM_LINE_ITEM_TABLE = "select excep_request_line_item_id from dds.exception_request_line_item   where excep_request_id  ='<excep_request_id>'";
    public static final String SELECT_EXCEPTION_REQUEST_DETAILS_OF_SINGLE_CUSTOMER_FOR_GIVEN_STATUS_GIVEN_OPCO = "SELECT * FROM dds.exception_request er inner join dds.exception_request_line_item eli on er.excep_request_id  = eli.excep_request_id where er.group_id is null and er.status = '30' and eli.status = '<status>' and er.opco_id = '<OPCO>' limit 1";
    public static final String SELECT_MARKET_NAME_FROM_MAKET_TABLE = "select market_name from  dds.opco o inner join dds.market m on o.market_id = m.market_id where opco_id = '<opco_id>'" ;
    public static final String SELECT_REGION_NAME_FROM_REGION_TABLE = "select region_name from  dds.opco t1 inner join dds.region t2 on t1.region_id = t2.region_id where t1.opco_id = '<opco_id>'" ;

    //Customer Exclusion
    public static final String SELECT_CUSTOMER_EXCLUDES_DETAILS = "select * from dds.ex_request_customer_excludes where excep_request_line_item_id = '<exception_request_line_item_id>'";
    public static final String SELECT_CUSTOMER_EXCLUSION_SETTINGS_DETAILS = "select * from dds.customer_settings where customer_id = '<cust_ref_id>' and modification_type = '0' and status = '1'";
    public static final String SELECT_CUSTOMER_IDS_OF_EXCLUDED_CUSTOMERS = "select customer_id from dds.customer_settings where modification_type = '0' and status = '1'";
    public static final String SELECT_CUSTOMER_SETTINGS_DETAILS_WITH_PZ = "select * from dds.customer_settings where customer_id = '<customer_ref_id>' and modification_type = '<modification_type>' and status = '1' and price_zone = '<price_zone>'";
    //Item Exclusion
    public static final String SELECT_ITEM_EXCLUDES_DETAILS = "select * from dds.ex_request_item_excludes where excep_request_line_item_id = '<exception_request_line_item_id>'";
    public static final String SELECT_ITEM_EXCLUSION_SETTINGS_DETAILS = "select * from dds.item_settings where item_id = '<item_ref_id>' and modification_type = '0' and status = '1'";
    //Group Exclusion
    public static final String SELECT_GROUP_EXCLUDES_DETAILS = "select * from dds.ex_request_group_excludes where excep_request_line_item_id = '<exception_request_line_item_id>'";
    public static final String SELECT_GROUP_EXCLUSION_SETTINGS_DETAILS = "select * from dds.group_settings where group_id = '<group_ref_id>' and modification_type = '0' and status = '1'";
    //Category Exclusion
    public static final String SELECT_CATEGORY_EXCLUDES_DETAILS = "select * from dds.ex_request_item_category_excludes where excep_request_line_item_id = '<exception_request_line_item_id>'";
    public static final String SELECT_CATEGORY_EXCLUSION_SETTINGS_DETAILS = "select * from dds.item_category_settings where item_category_id = '<item_category_id>' and item_category_type ='<item_category_type>' and modification_type = '0' and status = '1'";
    //update status of customer
    public static final String SET_STATUS_OF_CUSTOMER = "update dds.customer set status ='<status>' where customer_name = '<customer-name>'";
    public static final String SET_STATUS_OF_CUSTOMER_BY_CUSTOMER_ID = "update dds.customer set status ='<status>' where customer_id = '<customer-id>'";
//    public static final String SELECT_ALL_ACTIVE_EXCEPTIONS = " SELECT * FROM dds.exception_request_line_item as table1 join dds.exception_request as table2 on table1.excep_request_id = table2.excep_request_id where table1.created_date_time >='<MONDAY>' AND table1.created_date_time<'<SUNDAY>' and table2.opco_id='067' and table1.status in (5,10,20,30,40,50,60) and table2.status in (5,10,30) order by table1.created_date_time DESC LIMIT 500";
    public static final String SELECT_ALL_ACTIVE_EXCEPTIONS = "SELECT exception_request_line_item.excep_request_line_item_id,sales_consultant.sc_name,exception_request.excep_request_id,exception_request.parent_excep_request_id,item.supc,item.item_name,exception_request_line_item.approved_price,exception_request_line_item.list_price,exception_request_line_item.status,exception_request_line_item.decision_date_time,customer_filtered.customer_id,customer_filtered.customer_name,customer_filtered.customer_sysco_id,group_table.group_id,group_table.group_number,group_table.group_name,customer_filtered.region_name,customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc ) as notes, count(*) OVER() AS full_count FROM (  SELECT customer.customer_id,customer.customer_name,customer.customer_sysco_id,region.region_name, opco.opco_name FROM dds.customer JOIN dds.opco ON opco.opco_id = customer.opco_id JOIN dds.region ON opco.region_id = region.region_id join dds.customer_sc_association sca on customer.customer_id =sca.customer_id where customer.opco_id in (<OPCOS>) ) AS customer_filtered JOIN dds.exception_request on customer_filtered.customer_id=exception_request.customer_id JOIN dds.exception_request_line_item on exception_request_line_item.excep_request_id=exception_request.excep_request_id AND exception_request_line_item.customer_id = exception_request.customer_id LEFT JOIN dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id JOIN dds.item ON exception_request_line_item.item_id = item.item_id LEFT JOIN  dds.\"group\" group_table on exception_request.group_id = group_table.group_id LEFT JOIN dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester WHERE ( '<MONDAY>' <= exception_request.end_date) AND (exception_request.exception_type != 3 AND exception_request.exception_type != 4) AND (exception_request.status=5 or exception_request.status=10 or exception_request.status=30 )  AND (exception_request_line_item.status=5 or exception_request_line_item.status=10 or exception_request_line_item.status=20 or exception_request_line_item.status=30 or exception_request_line_item.status=40 or exception_request_line_item.status=50 or exception_request_line_item.status=60) GROUP BY exception_request_line_item.excep_request_line_item_id,sales_consultant.sc_name,customer_filtered.customer_name,customer_filtered.customer_sysco_id,item.item_name,group_table.group_id,customer_filtered.customer_id,exception_request.excep_request_id,item.supc,customer_filtered.region_name,customer_filtered.opco_name ORDER BY sales_consultant.sc_name asc LIMIT 500";
    public static final String SELECT_ALL_ACTIVE_EXCEPTIONS_FOR_GIVEN_OPCO = "select exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, exception_request.excep_request_id, exception_request.parent_excep_request_id, item.supc, item.item_name, exception_request_line_item.approved_price, exception_request_line_item.list_price, exception_request_line_item.status, exception_request_line_item.decision_date_time, customer_filtered.customer_id, customer_filtered.customer_name, customer_filtered.customer_sysco_id, group_table.group_id, group_table.group_number, group_table.group_name, customer_filtered.region_name, customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc) as notes, count(*) over() as full_count from( select customer.customer_id, customer.customer_name, customer.customer_sysco_id, region.region_name, opco.opco_name, opco.market_id, region.region_id, opco.opco_id, sales_consultant.sc_sysco_id, sales_consultant.dsm_id from dds.customer join dds.opco on opco.opco_id = customer.opco_id join dds.region on opco.region_id = region.region_id join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on customer_sc_association.sc_id = sales_consultant.sc_id) as customer_filtered join dds.exception_request on customer_filtered.customer_id = exception_request.customer_id join dds.exception_request_line_item on exception_request_line_item.excep_request_id = exception_request.excep_request_id and exception_request_line_item.customer_id = exception_request.customer_id left join dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id join dds.item on exception_request_line_item.item_id = item.item_id left join dds.\"group\" group_table on exception_request.group_id = group_table.group_id left join dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester where ( '<TODAY>' <= exception_request.end_date and exception_request.end_date < '<NEXT-WEEK-MONDAY>') and (exception_request.exception_type != 3 and exception_request.exception_type != 4) and (exception_request.status = 5 or exception_request.status = 10 or exception_request.status = 15 or exception_request.status = 30) and (exception_request_line_item.status = 5 or exception_request_line_item.status = 10 or exception_request_line_item.status = 20 or exception_request_line_item.status = 30 or exception_request_line_item.status = 40 or exception_request_line_item.status = 50 or exception_request_line_item.status = 60) and (customer_filtered.opco_id = <OPCO>) group by exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, customer_filtered.customer_name, customer_filtered.customer_sysco_id, item.item_name, group_table.group_id, customer_filtered.customer_id, exception_request.excep_request_id, item.supc, customer_filtered.region_name, customer_filtered.opco_name order by item.supc desc OFFSET <OFFSET> LIMIT <LIMIT>;";
    public static final String SELECT_ALL_ACTIVE_EXCEPTIONS_FOR_GIVEN_QUERY = "select exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, exception_request.excep_request_id, exception_request.parent_excep_request_id, item.supc, item.item_name, exception_request_line_item.approved_price, exception_request_line_item.list_price, exception_request_line_item.status, exception_request_line_item.decision_date_time, customer_filtered.customer_id, customer_filtered.customer_name, customer_filtered.customer_sysco_id, group_table.group_id, group_table.group_number, group_table.group_name, customer_filtered.region_name, customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc) as notes, count(*) over() as full_count from( select customer.customer_id, customer.customer_name, customer.customer_sysco_id, region.region_name, opco.opco_name, opco.market_id, region.region_id, opco.opco_id, sales_consultant.sc_sysco_id, sales_consultant.dsm_id from dds.customer join dds.opco on opco.opco_id = customer.opco_id join dds.region on opco.region_id = region.region_id join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on customer_sc_association.sc_id = sales_consultant.sc_id) as customer_filtered join dds.exception_request on customer_filtered.customer_id = exception_request.customer_id join dds.exception_request_line_item on exception_request_line_item.excep_request_id = exception_request.excep_request_id and exception_request_line_item.customer_id = exception_request.customer_id left join dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id join dds.item on exception_request_line_item.item_id = item.item_id left join dds.\"group\" group_table on exception_request.group_id = group_table.group_id left join dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester where ( '<TODAY>' <= exception_request.end_date and exception_request.end_date < '<NEXT-WEEK-MONDAY>') and (exception_request.exception_type != 3 and exception_request.exception_type != 4) and (exception_request.status = 5 or exception_request.status = 10 or exception_request.status = 15 or exception_request.status = 30 ) and (exception_request_line_item.status = 60 or exception_request_line_item.status = 50) and (cast(exception_request.excep_request_id as VARCHAR) like '%<QUERY>%' or cast(exception_request.parent_excep_request_id as VARCHAR) like '%<QUERY>%' or cast(item.supc as VARCHAR) like '%<QUERY>%' or LOWER(sales_consultant.sc_name) like '%<QUERY>%' or LOWER(item.item_name) like '%<QUERY>%' or cast(exception_request_line_item.approved_price as VARCHAR) like '%<QUERY>%' or cast(exception_request_line_item.list_price as VARCHAR) like '%<QUERY>%' or ((cast(customer_filtered.customer_sysco_id as VARCHAR) like '%<QUERY>%' or LOWER(customer_filtered.customer_name) like '%<QUERY>%') and exception_request.group_id is null ) or cast(exception_request_line_item.decision_date_time as VARCHAR) like '%<QUERY>%' or cast(group_table.group_number as VARCHAR) like '%<QUERY>%' or LOWER(group_table.group_name) like '%<QUERY>%' or LOWER(region_name) like '%<QUERY>%' or LOWER(opco_name) like '%<QUERY>%') and (customer_filtered.region_id = <REGION-ID>) group by exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, customer_filtered.customer_name, customer_filtered.customer_sysco_id, item.item_name, group_table.group_id, customer_filtered.customer_id, exception_request.excep_request_id, item.supc, customer_filtered.region_name, customer_filtered.opco_name order by exception_request_line_item.decision_date_time desc OFFSET <OFFSET> LIMIT <LIMIT>;";
    public static final String SELECT_PENDING_EXCEPTIONS_FOR_OPCO_AND_DSMID_FILTERS = "select exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, exception_request.excep_request_id, exception_request.parent_excep_request_id, item.supc, item.item_name, exception_request_line_item.approved_price, exception_request_line_item.list_price, exception_request_line_item.status, exception_request_line_item.decision_date_time, customer_filtered.customer_id, customer_filtered.customer_name, customer_filtered.customer_sysco_id, group_table.group_id, group_table.group_number, group_table.group_name, customer_filtered.region_name, customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc) as notes, count(*) over() as full_count from( select customer.customer_id, customer.customer_name, customer.customer_sysco_id, region.region_name, opco.opco_name, opco.market_id, region.region_id, opco.opco_id, sales_consultant.sc_sysco_id, sales_consultant.dsm_id from dds.customer join dds.opco on opco.opco_id = customer.opco_id join dds.region on opco.region_id = region.region_id join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on customer_sc_association.sc_id = sales_consultant.sc_id where customer.opco_id in (66, 67)) as customer_filtered join dds.exception_request on customer_filtered.customer_id = exception_request.customer_id join dds.exception_request_line_item on exception_request_line_item.excep_request_id = exception_request.excep_request_id and exception_request_line_item.customer_id = exception_request.customer_id left join dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id join dds.item on exception_request_line_item.item_id = item.item_id left join dds.\"group\" group_table on exception_request.group_id = group_table.group_id left join dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester where ( '<TODAY>' <= exception_request.end_date and exception_request.end_date < '<NEXT-WEEK-MONDAY>') and (exception_request.exception_type != 3 and exception_request.exception_type != 4) and (exception_request.status = 5 or exception_request.status = 10 or exception_request.status = 15 or exception_request.status = 30 ) and (exception_request_line_item.status = 30 or exception_request_line_item.status = 40) and (customer_filtered.opco_id = <OPCO-ID> and customer_filtered.dsm_id = '<DSM-ID>') group by exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, customer_filtered.customer_name, customer_filtered.customer_sysco_id, item.item_name, group_table.group_id, customer_filtered.customer_id, exception_request.excep_request_id, item.supc, customer_filtered.region_name, customer_filtered.opco_name order by exception_request_line_item.decision_date_time desc offset <OFFSET> limit <LIMIT>;";
    public static final String SELECT_ALL_PENDING_EXCEPTIONS_FOR_ALL_ACTIVE_FILTERS = "select exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, exception_request.excep_request_id, exception_request.parent_excep_request_id, item.supc, item.item_name, exception_request_line_item.approved_price, exception_request_line_item.list_price, exception_request_line_item.status, exception_request_line_item.decision_date_time, customer_filtered.customer_id, customer_filtered.customer_name, customer_filtered.customer_sysco_id, group_table.group_id, group_table.group_number, group_table.group_name, customer_filtered.region_name, customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc) as notes, count(*) over() as full_count from( select customer.customer_id, customer.customer_name, customer.customer_sysco_id, region.region_name, opco.opco_name, opco.market_id, region.region_id, opco.opco_id, sales_consultant.sc_sysco_id, sales_consultant.dsm_id from dds.customer join dds.opco on opco.opco_id = customer.opco_id join dds.region on opco.region_id = region.region_id join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on customer_sc_association.sc_id = sales_consultant.sc_id ) as customer_filtered join dds.exception_request on customer_filtered.customer_id = exception_request.customer_id join dds.exception_request_line_item on exception_request_line_item.excep_request_id = exception_request.excep_request_id and exception_request_line_item.customer_id = exception_request.customer_id left join dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id join dds.item on exception_request_line_item.item_id = item.item_id left join dds.\"group\" group_table on exception_request.group_id = group_table.group_id left join dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester where ( '<TODAY>' <= exception_request.end_date and exception_request.end_date < '<NEXT-WEEK-MONDAY>') and (exception_request.exception_type != 3 and exception_request.exception_type != 4) and (exception_request.status = 5 or exception_request.status = 10 or exception_request.status = 15 or exception_request.status = 30 ) and (exception_request_line_item.status = 30 or exception_request_line_item.status = 40) and (customer_filtered.market_id = <MARKET-ID> and customer_filtered.region_id = <REGION-ID> and customer_filtered.opco_id = <OPCO-ID> and customer_filtered.dsm_id = '<DSM-ID>' and customer_filtered.sc_sysco_id = '<SC-ID>') group by exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, customer_filtered.customer_name, customer_filtered.customer_sysco_id, item.item_name, group_table.group_id, customer_filtered.customer_id, exception_request.excep_request_id, item.supc, customer_filtered.region_name, customer_filtered.opco_name order by exception_request_line_item.decision_date_time desc offset <OFFSET> limit <LIMIT>;";
    public static final String SELECT_ALL_EXCEPTIONS_FOR_SOME_ACTIVE_FILTERS = "select exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, exception_request.excep_request_id, exception_request.parent_excep_request_id, item.supc, item.item_name, exception_request_line_item.approved_price, exception_request_line_item.list_price, exception_request_line_item.status, exception_request_line_item.decision_date_time, customer_filtered.customer_id, customer_filtered.customer_name, customer_filtered.customer_sysco_id, group_table.group_id, group_table.group_number, group_table.group_name, customer_filtered.region_name, customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc) as notes, count(*) over() as full_count from( select customer.customer_id, customer.customer_name, customer.customer_sysco_id, region.region_name, opco.opco_name, opco.market_id, region.region_id, opco.opco_id, sales_consultant.sc_sysco_id, sales_consultant.dsm_id from dds.customer join dds.opco on opco.opco_id = customer.opco_id join dds.region on opco.region_id = region.region_id join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on customer_sc_association.sc_id = sales_consultant.sc_id ) as customer_filtered join dds.exception_request on customer_filtered.customer_id = exception_request.customer_id join dds.exception_request_line_item on exception_request_line_item.excep_request_id = exception_request.excep_request_id and exception_request_line_item.customer_id = exception_request.customer_id left join dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id join dds.item on exception_request_line_item.item_id = item.item_id left join dds.\"group\" group_table on exception_request.group_id = group_table.group_id left join dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester where ( '<TODAY>' <= exception_request.end_date and exception_request.end_date < '<NEXT-WEEK-MONDAY>') and (exception_request.exception_type != 3 and exception_request.exception_type != 4) and (exception_request.status = 5 or exception_request.status = 10 or exception_request.status = 15 or exception_request.status = 30 ) and (exception_request_line_item.status = 5 or exception_request_line_item.status = 10 or exception_request_line_item.status = 20 or exception_request_line_item.status = 30 or exception_request_line_item.status = 40 or exception_request_line_item.status = 50 or exception_request_line_item.status = 60) and (customer_filtered.market_id = <MARKET-ID> and customer_filtered.region_id = <REGION-ID> and customer_filtered.opco_id = <OPCO-ID>) group by exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, customer_filtered.customer_name, customer_filtered.customer_sysco_id, item.item_name, group_table.group_id, customer_filtered.customer_id, exception_request.excep_request_id, item.supc, customer_filtered.region_name, customer_filtered.opco_name order by exception_request_line_item.decision_date_time desc offset <OFFSET> limit <LIMIT>;";
    public static final String SELECT_ALL_EXCEPTIONS_FOR_DSM_FILTER = "select exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, exception_request.excep_request_id, exception_request.parent_excep_request_id, item.supc, item.item_name, exception_request_line_item.approved_price, exception_request_line_item.list_price, exception_request_line_item.status, exception_request_line_item.decision_date_time, customer_filtered.customer_id, customer_filtered.customer_name, customer_filtered.customer_sysco_id, group_table.group_id, group_table.group_number, group_table.group_name, customer_filtered.region_name, customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc) as notes, count(*) over() as full_count from( select customer.customer_id, customer.customer_name, customer.customer_sysco_id, region.region_name, opco.opco_name, opco.market_id, region.region_id, opco.opco_id, sales_consultant.sc_sysco_id, sales_consultant.dsm_id from dds.customer join dds.opco on opco.opco_id = customer.opco_id join dds.region on opco.region_id = region.region_id join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on customer_sc_association.sc_id = sales_consultant.sc_id) where customer.opco_id in (66, 67)) as customer_filtered join dds.exception_request on customer_filtered.customer_id = exception_request.customer_id join dds.exception_request_line_item on exception_request_line_item.excep_request_id = exception_request.excep_request_id and exception_request_line_item.customer_id = exception_request.customer_id left join dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id join dds.item on exception_request_line_item.item_id = item.item_id left join dds.\"group\" group_table on exception_request.group_id = group_table.group_id left join dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester where ( '<TODAY>' <= exception_request.end_date and exception_request.end_date < '<NEXT-WEEK-MONDAY>') and (exception_request.exception_type != 3 and exception_request.exception_type != 4) and (exception_request.status = 5 or exception_request.status = 10 or exception_request.status = 15 or exception_request.status = 30 ) and (exception_request_line_item.status = 30 or exception_request_line_item.status = 40) and (customer_filtered.dsm_id = '<DSM-ID>') group by exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, customer_filtered.customer_name, customer_filtered.customer_sysco_id, item.item_name, group_table.group_id, customer_filtered.customer_id, exception_request.excep_request_id, item.supc, customer_filtered.region_name, customer_filtered.opco_name order by exception_request_line_item.decision_date_time desc offset <offset> limit < limit>;";
    public static final String SELECT_PENDING_EXCEPTIONS_FOR_SC_FILTER = "select exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, exception_request.excep_request_id, exception_request.parent_excep_request_id, item.supc, item.item_name, exception_request_line_item.approved_price, exception_request_line_item.list_price, exception_request_line_item.status, exception_request_line_item.decision_date_time, customer_filtered.customer_id, customer_filtered.customer_name, customer_filtered.customer_sysco_id, group_table.group_id, group_table.group_number, group_table.group_name, customer_filtered.region_name, customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc) as notes, count(*) over() as full_count from( select customer.customer_id, customer.customer_name, customer.customer_sysco_id, region.region_name, opco.opco_name, opco.market_id, region.region_id, opco.opco_id, sales_consultant.sc_sysco_id, sales_consultant.dsm_id from dds.customer join dds.opco on opco.opco_id = customer.opco_id join dds.region on opco.region_id = region.region_id join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on customer_sc_association.sc_id = sales_consultant.sc_id) where customer.opco_id in (67)) as customer_filtered join dds.exception_request on customer_filtered.customer_id = exception_request.customer_id join dds.exception_request_line_item on exception_request_line_item.excep_request_id = exception_request.excep_request_id and exception_request_line_item.customer_id = exception_request.customer_id left join dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id join dds.item on exception_request_line_item.item_id = item.item_id left join dds.\"group\" group_table on exception_request.group_id = group_table.group_id left join dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester where ( '<TODAY>' <= exception_request.end_date and exception_request.end_date < '<NEXT-WEEK-MONDAY>') and (exception_request.exception_type != 3 and exception_request.exception_type != 4) and (exception_request.status = 5 or exception_request.status = 10 or exception_request.status = 15 or exception_request.status = 30) and (exception_request_line_item.status = 30 or exception_request_line_item.status = 40) and (customer_filtered.sc_sysco_id = '<SC-ID>') group by exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, customer_filtered.customer_name, customer_filtered.customer_sysco_id, item.item_name, group_table.group_id, customer_filtered.customer_id, exception_request.excep_request_id, item.supc, customer_filtered.region_name, customer_filtered.opco_name order by exception_request_line_item.decision_date_time desc offset <offset> limit < limit>;";
    public static final String SELECT_ALL_EXCEPTIONS_FOR_OPCO_FILTER = "select exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, exception_request.excep_request_id, exception_request.parent_excep_request_id, item.supc, item.item_name, exception_request_line_item.approved_price, exception_request_line_item.list_price, exception_request_line_item.status, exception_request_line_item.decision_date_time, customer_filtered.customer_id, customer_filtered.customer_name, customer_filtered.customer_sysco_id, group_table.group_id, group_table.group_number, group_table.group_name, customer_filtered.region_name, customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc) as notes, count(*) over() as full_count from( select customer.customer_id, customer.customer_name, customer.customer_sysco_id, region.region_name, opco.opco_name, opco.market_id, region.region_id, opco.opco_id, sales_consultant.sc_sysco_id, sales_consultant.dsm_id from dds.customer join dds.opco on opco.opco_id = customer.opco_id join dds.region on opco.region_id = region.region_id join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on customer_sc_association.sc_id = sales_consultant.sc_id where customer.opco_id in (66, 67)) as customer_filtered join dds.exception_request on customer_filtered.customer_id = exception_request.customer_id join dds.exception_request_line_item on exception_request_line_item.excep_request_id = exception_request.excep_request_id and exception_request_line_item.customer_id = exception_request.customer_id left join dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id join dds.item on exception_request_line_item.item_id = item.item_id left join dds.\"group\" group_table on exception_request.group_id = group_table.group_id left join dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester where ( '<TODAY>' <= exception_request.end_date and exception_request.end_date < '<NEXT-WEEK-MONDAY>') and (exception_request.exception_type != 3 and exception_request.exception_type != 4) and (exception_request.status = 5 or exception_request.status = 10 or exception_request.status = 15 or exception_request.status = 30) and (exception_request_line_item.status = 5 or exception_request_line_item.status = 10 or exception_request_line_item.status = 20 or exception_request_line_item.status = 30 or exception_request_line_item.status = 40 or exception_request_line_item.status = 50 or exception_request_line_item.status = 60) and (customer_filtered.opco_id = '<OPCO-ID>') group by exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, customer_filtered.customer_name, customer_filtered.customer_sysco_id, item.item_name, group_table.group_id, customer_filtered.customer_id, exception_request.excep_request_id, item.supc, customer_filtered.region_name, customer_filtered.opco_name order by exception_request_line_item.decision_date_time desc OFFSET <OFFSET> LIMIT <LIMIT>;";
    public static final String SELECT_REJECTED_EXCEPTIONS_FOR_REGION_FILTER = "select exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, exception_request.excep_request_id, exception_request.parent_excep_request_id, item.supc, item.item_name, exception_request_line_item.approved_price, exception_request_line_item.list_price, exception_request_line_item.status, exception_request_line_item.decision_date_time, customer_filtered.customer_id, customer_filtered.customer_name, customer_filtered.customer_sysco_id, group_table.group_id, group_table.group_number, group_table.group_name, customer_filtered.region_name, customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc) as notes, count(*) over() as full_count from( select customer.customer_id, customer.customer_name, customer.customer_sysco_id, region.region_name, opco.opco_name, opco.market_id, region.region_id, opco.opco_id, sales_consultant.sc_sysco_id, sales_consultant.dsm_id from dds.customer join dds.opco on opco.opco_id = customer.opco_id join dds.region on opco.region_id = region.region_id join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on customer_sc_association.sc_id = sales_consultant.sc_id where customer.opco_id in (66, 67)) as customer_filtered join dds.exception_request on customer_filtered.customer_id = exception_request.customer_id join dds.exception_request_line_item on exception_request_line_item.excep_request_id = exception_request.excep_request_id and exception_request_line_item.customer_id = exception_request.customer_id left join dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id join dds.item on exception_request_line_item.item_id = item.item_id left join dds.\"group\" group_table on exception_request.group_id = group_table.group_id left join dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester where ( '<TODAY>' <= exception_request.end_date and exception_request.end_date < '<NEXT-WEEK-MONDAY>') and (exception_request.exception_type != 3 and exception_request.exception_type != 4) and (exception_request.status = 5 or exception_request.status = 10 or exception_request.status = 15 or exception_request.status = 30) and (exception_request_line_item.status = 10 or exception_request_line_item.status = 20) and (customer_filtered.region_id = '<REGION-ID>') group by exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, customer_filtered.customer_name, customer_filtered.customer_sysco_id, item.item_name, group_table.group_id, customer_filtered.customer_id, exception_request.excep_request_id, item.supc, customer_filtered.region_name, customer_filtered.opco_name order by exception_request_line_item.decision_date_time desc OFFSET <OFFSET> LIMIT <LIMIT>;";
    public static final String SELECT_ALL_EXCEPTIONS_FOR_MARKET_FILTER = "select exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, exception_request.excep_request_id, exception_request.parent_excep_request_id, item.supc, item.item_name, exception_request_line_item.approved_price, exception_request_line_item.list_price, exception_request_line_item.status, exception_request_line_item.decision_date_time, customer_filtered.customer_id, customer_filtered.customer_name, customer_filtered.customer_sysco_id, group_table.group_id, group_table.group_number, group_table.group_name, customer_filtered.region_name, customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc) as notes, count(*) over() as full_count from( select customer.customer_id, customer.customer_name, customer.customer_sysco_id, region.region_name, opco.opco_name, opco.market_id, region.region_id, opco.opco_id, sales_consultant.sc_sysco_id, sales_consultant.dsm_id from dds.customer join dds.opco on opco.opco_id = customer.opco_id join dds.region on opco.region_id = region.region_id join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on customer_sc_association.sc_id = sales_consultant.sc_id) as customer_filtered join dds.exception_request on customer_filtered.customer_id = exception_request.customer_id join dds.exception_request_line_item on exception_request_line_item.excep_request_id = exception_request.excep_request_id and exception_request_line_item.customer_id = exception_request.customer_id left join dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id join dds.item on exception_request_line_item.item_id = item.item_id left join dds.\"group\" group_table on exception_request.group_id = group_table.group_id left join dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester where ( '<TODAY>' <= exception_request.end_date and exception_request.end_date < '<NEXT-WEEK-MONDAY>') and (exception_request.exception_type != 3 and exception_request.exception_type != 4) and (exception_request.status = 5 or exception_request.status = 10 or exception_request.status = 15 or exception_request.status = 30) and (exception_request_line_item.status = 60 or exception_request_line_item.status = 50) and (customer_filtered.market_id = '<MARKET-ID>') group by exception_request_line_item.excep_request_line_item_id, sales_consultant.sc_name, customer_filtered.customer_name, customer_filtered.customer_sysco_id, item.item_name, group_table.group_id, customer_filtered.customer_id, exception_request.excep_request_id, item.supc, customer_filtered.region_name, customer_filtered.opco_name order by exception_request_line_item.decision_date_time desc OFFSET <OFFSET> LIMIT <LIMIT>;";
    public static final String GET_OPCOS_FOR_USER = "select opco.opco_id from dds.opco join dds.region on opco.region_id = region.region_id where region.region_id = (select region.region_id from dds.opco join dds.region on opco.region_id = region.region_id where opco_id = %s)";
    //Exception Creation
    public static final String SELECT_ACTIVE_CUSTOMER = "select customer_id from dds.customer where status='1' and  opco_id='067'";
    public static final String SELECT_ACTIVE_CUST_FOR_SC = "select customer.customer_id from dds.customer join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on sales_consultant.sc_id = customer_sc_association.sc_id where customer.status = 1 and customer.opco_id=67 and sc_sysco_id = '%s'";
    public static final String SELECT_ACTIVE_CUSTOMER_NOT_IN_67 = "select er.customer_id from  qa.dds.exception_request er inner join dds.exception_request_line_item eli on er.excep_request_id  = eli.excep_request_id where er.group_id  is null and eli.status in ('30','40') and er.opco_id != '067'";
    public static final String SELECT_ACTIVE_GROUP_NOT_IN_67 = "select table2.group_id from dds.exception_request as table1 join dds.group as table2 on table1.group_id = table2.group_id where table1.status in (30,40) and table1.group_id is not null and table1.opco_id != 67 limit 1\n";


    //User Details API - setting user/role/association data
    public static final String SET_USER_DATA = "update dds.user set email ='autotest2@dsd.com' where sysco_id ='autotest1'";
    public static final String SET_USER_ROLE_DATA = "update dds.user_role set role_name ='BOT' where user_role_id ='68'";
    public static final String SET_USER_ROLE_ASSOCIATION = "update qa.dds.user_user_role_association set usbl ='opco' , reference_id ='019' where user_id ='68'";
    public static final String SET_USER_DATA_BACK = "update dds.user set email ='autotest1@dsd.com' where sysco_id ='autotest1'";
    public static final String SET_USER_ROLE_DATA_BACK = "update dds.user_role set role_name ='AUTO' where user_role_id ='68'";
    public static final String SET_USER_ROLE_ASSOCIATION_BACK = "update qa.dds.user_user_role_association set usbl ='market' , reference_id ='903' where user_id ='68'";
    public static final String DELETE_USER_ROLE_ASSOCIATION = "delete from qa.dds.user_user_role_association where user_id = <userId>";
    public static final String DELETE_USER_DATA = "delete from qa.dds.user where sysco_id = '<syscoId>'";

    //Market API
    public static final String GET_MARKET_ID = "select market_id FROM dds.market status where status =1";
    public static final String GET_MARKET_NAME = "select market_name FROM dds.market status where status =1";
    //Region API
    public static final String GET_REGION_ID = "SELECT region_id FROM dds.region where status =1";
    public static final String GET_REGION_NAME = "SELECT region_name FROM dds.region where status =1";
    //CMIM API
    public static final String GET_CMIM_DATA_CATEGORY = "SELECT category_id,category_name FROM dds.item_category where status=1";
    public static final String GET_CMIM_DATA_MAJOR_CATEGORY = "SELECT major_category_id,category_id,major_category_name FROM dds.item_major_category where status=1";
    public static final String GET_CMIM_DATA_INTER_CATEGORY = "SELECT intermediate_category_id,major_category_id,intermediate_category_name FROM dds.item_intermediate_category where status=1";
    public static final String GET_CMIM_DATA_MINOR_CATEGORY = "SELECT minor_category_id,intermediate_category_id,minor_category_name FROM dds.item_minor_category where status=1 order by minor_category_id";
    //Sites API
    public static final String GET_OPCO_DETAILS = "SELECT opco_id,opco_name FROM dds.opco where status=1";

    //User role details
    public static final String SELECT_USER_DETAILS_FROM_USER_TABLE = "select * from dds.user where sysco_id = '<sysco_id>' and status = '1'";
    public static final String SELECT_USER_DETAILS_FROM_USER_ROLE_ASSOCIATION_TABLE = "select * from dds.user_user_role_association where user_id = '<user_id>' and reference_id ='<reference_id>' and usbl = '<usbl>' and status = 1";

    //ExceptionRequestLineItemReview
    public static final String SELECT_DETAILS_FROM_LINE_ITEM_REVIEW_TABLE = "select * from dds.exception_request_line_item_review  where excep_request_line_item_id = '<line_item_id>'";
    public static final String COUNT_DETAILS_FROM_LINE_ITEM_REVIEW_TABLE = "select count(excep_request_line_item_id) from dds.exception_request_line_item_review excerev  where excep_request_line_item_id ='<line_item_id>'";

    //ExceptionListView
    public static final String SET_STATUS_FROM_EXCEPTION_REQUEST_LINEITEM = "UPDATE dds.exception_request_line_item SET status='<status>' WHERE excep_request_id='<exception_request_id>'";
    public static final String SET_STATUS_FROM_EXCEPTION_REQUEST= "UPDATE dds.exception_request SET status='<status>' WHERE excep_request_id='<exception_request_id>'";
    public static final String SET_EXCEPTION_END_DATE = "UPDATE dds.exception_request SET end_date='<end_date>' WHERE excep_request_id='<exception_request_id>'";
    public static final String SET_CUSTOMER_OPCO_ID = "update dds.customer SET opco_id='<opco_id>' WHERE customer_sysco_id='<customer_id>'";
    public static final String SELECT_APPROVED_EXCEPTIONLIST = "SELECT exception_request.excep_request_id FROM (SELECT customer.customer_id,customer.customer_name,customer.customer_sysco_id,region.region_name, opco.opco_name FROM dds.customer JOIN dds.opco ON opco.opco_id = customer.opco_id JOIN dds.region ON opco.region_id = region.region_id join dds.customer_sc_association sca on customer.customer_id =sca.customer_id WHERE customer.opco_id IN (%s)  ) AS customer_filtered JOIN dds.exception_request on customer_filtered.customer_id=exception_request.customer_id JOIN dds.exception_request_line_item on exception_request_line_item.excep_request_id=exception_request.excep_request_id AND exception_request_line_item.customer_id = exception_request.customer_id LEFT JOIN dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id JOIN dds.item ON exception_request_line_item.item_id = item.item_id LEFT JOIN  dds.\"group\" group_table on exception_request.group_id = group_table.group_id LEFT JOIN dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester WHERE ( '%s' <= exception_request.end_date) and (exception_request.end_date < '%s') AND (exception_request.exception_type != 3 AND exception_request.exception_type != 4) AND (exception_request.status=5 or exception_request.status=10 or exception_request.status=30 )  AND (exception_request_line_item.status=60 or exception_request_line_item.status=50) GROUP BY exception_request_line_item.excep_request_line_item_id,sales_consultant.sc_name,customer_filtered.customer_name,customer_filtered.customer_sysco_id,item.item_name,group_table.group_id,customer_filtered.customer_id,exception_request.excep_request_id,item.supc,customer_filtered.region_name,customer_filtered.opco_name ORDER BY exception_request_line_item.decision_date_time desc LIMIT 500";
    public static final String SELECT_PENDING_EXCEPTIONLIST = "SELECT exception_request.excep_request_id FROM (SELECT customer.customer_id,customer.customer_name,customer.customer_sysco_id,region.region_name, opco.opco_name FROM dds.customer JOIN dds.opco ON opco.opco_id = customer.opco_id JOIN dds.region ON opco.region_id = region.region_id join dds.customer_sc_association sca on customer.customer_id =sca.customer_id WHERE customer.opco_id IN (%s)  ) AS customer_filtered JOIN dds.exception_request on customer_filtered.customer_id=exception_request.customer_id JOIN dds.exception_request_line_item on exception_request_line_item.excep_request_id=exception_request.excep_request_id AND exception_request_line_item.customer_id = exception_request.customer_id LEFT JOIN dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id JOIN dds.item ON exception_request_line_item.item_id = item.item_id LEFT JOIN  dds.\"group\" group_table on exception_request.group_id = group_table.group_id LEFT JOIN dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester WHERE ( '%s' <= exception_request.end_date) and (exception_request.end_date < '%s') AND (exception_request.exception_type != 3 AND exception_request.exception_type != 4) AND (exception_request.status=5 or exception_request.status=10 or exception_request.status=30 )  AND (exception_request_line_item.status=30 or exception_request_line_item.status=40) GROUP BY exception_request_line_item.excep_request_line_item_id,sales_consultant.sc_name,customer_filtered.customer_name,customer_filtered.customer_sysco_id,item.item_name,group_table.group_id,customer_filtered.customer_id,exception_request.excep_request_id,item.supc,customer_filtered.region_name,customer_filtered.opco_name ORDER BY exception_request_line_item.decision_date_time desc LIMIT 500";
    public static final String SELECT_REJECTED_EXCEPTIONLIST = "SELECT exception_request.excep_request_id FROM (SELECT customer.customer_id,customer.customer_name,customer.customer_sysco_id,region.region_name, opco.opco_name FROM dds.customer JOIN dds.opco ON opco.opco_id = customer.opco_id JOIN dds.region ON opco.region_id = region.region_id join dds.customer_sc_association sca on customer.customer_id =sca.customer_id WHERE customer.opco_id IN (%s)  ) AS customer_filtered JOIN dds.exception_request on customer_filtered.customer_id=exception_request.customer_id JOIN dds.exception_request_line_item on exception_request_line_item.excep_request_id=exception_request.excep_request_id AND exception_request_line_item.customer_id = exception_request.customer_id LEFT JOIN dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id JOIN dds.item ON exception_request_line_item.item_id = item.item_id LEFT JOIN  dds.\"group\" group_table on exception_request.group_id = group_table.group_id LEFT JOIN dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester WHERE ( '%s' <= exception_request.end_date) and (exception_request.end_date < '%s') AND (exception_request.exception_type != 3 AND exception_request.exception_type != 4) AND (exception_request.status=5 or exception_request.status=10 or exception_request.status=30 )  AND (exception_request_line_item.status=10 or exception_request_line_item.status=20) GROUP BY exception_request_line_item.excep_request_line_item_id,sales_consultant.sc_name,customer_filtered.customer_name,customer_filtered.customer_sysco_id,item.item_name,group_table.group_id,customer_filtered.customer_id,exception_request.excep_request_id,item.supc,customer_filtered.region_name,customer_filtered.opco_name ORDER BY exception_request_line_item.decision_date_time desc LIMIT 500";
    public static final String SELECT_ALL_EXCEPTIONLIST = "SELECT exception_request.excep_request_id FROM (  SELECT customer.customer_id,customer.customer_name,customer.customer_sysco_id,region.region_name, opco.opco_name FROM dds.customer JOIN dds.opco ON opco.opco_id = customer.opco_id JOIN dds.region ON opco.region_id = region.region_id join dds.customer_sc_association sca on customer.customer_id = sca.customer_id WHERE customer.opco_id IN (%s)  ) AS customer_filtered JOIN dds.exception_request on customer_filtered.customer_id=exception_request.customer_id JOIN dds.exception_request_line_item on exception_request_line_item.excep_request_id=exception_request.excep_request_id AND exception_request_line_item.customer_id = exception_request.customer_id LEFT JOIN dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id JOIN dds.item ON exception_request_line_item.item_id = item.item_id LEFT JOIN  dds.\"group\" group_table on exception_request.group_id = group_table.group_id LEFT JOIN dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester WHERE ( '%s' <= exception_request.end_date) and (exception_request.end_date < '%s') AND (exception_request.exception_type != 3 AND exception_request.exception_type != 4) AND (exception_request.status=5 or exception_request.status=10 or exception_request.status=30 )  AND (exception_request_line_item.status=5 or exception_request_line_item.status=10 or exception_request_line_item.status=20 or exception_request_line_item.status=30 or exception_request_line_item.status=40 or exception_request_line_item.status=50 or exception_request_line_item.status=60) GROUP BY exception_request_line_item.excep_request_line_item_id,sales_consultant.sc_name,customer_filtered.customer_name,customer_filtered.customer_sysco_id,item.item_name,group_table.group_id,customer_filtered.customer_id,exception_request.excep_request_id,item.supc,customer_filtered.region_name,customer_filtered.opco_name ORDER BY exception_request_line_item.decision_date_time desc LIMIT 500";
    public static final String ALREADY_ENDED_EXCEPTIONS = "select exception_request.excep_request_id from (  SELECT customer.customer_id,customer.customer_name,customer.customer_sysco_id,region.region_name, opco.opco_name FROM dds.customer JOIN dds.opco ON opco.opco_id = customer.opco_id JOIN dds.region ON opco.region_id = region.region_id WHERE customer.opco_id IN (%s)  ) AS customer_filtered JOIN dds.exception_request on customer_filtered.customer_id=exception_request.customer_id where '%s' <= exception_request.end_date AND (exception_request.exception_type != 3 AND exception_request.exception_type != 4) AND ( exception_request.status = 50 ) LIMIT 10";
    public static final String SELECT_NOT_ENDED_ACTIVE_EXCEPTIONS = "select exception_request.excep_request_id from dds.exception_request where exception_request.opco_id in ('%s') and '%s' <= exception_request.start_date AND '%s' > exception_request.end_date AND exception_request.status != 50 LIMIT 10";
    public static final String SELECT_APPROVED_EXCEPTIONS_LIST_OF_DRM_USER = "SELECT exception_request.excep_request_id from (SELECT customer.customer_id,customer.customer_name,customer.customer_sysco_id,region.region_name, opco.opco_name FROM dds.customer JOIN dds.opco ON opco.opco_id = customer.opco_id JOIN dds.region ON opco.region_id = region.region_id join dds.customer_sc_association sca on customer.customer_id =sca.customer_id   ) AS customer_filtered JOIN dds.exception_request on customer_filtered.customer_id=exception_request.customer_id " +
            "JOIN dds.exception_request_line_item on exception_request_line_item.excep_request_id=exception_request.excep_request_id WHERE ( '%s' <= exception_request.end_date) and (exception_request.end_date < '%s') AND (exception_request.exception_type != 3 AND exception_request.exception_type != 4) " +
            "AND exception_request.status in (10,30,15) AND exception_request_line_item.status in (60,50) GROUP by exception_request.excep_request_id, exception_request_line_item.decision_date_time ORDER BY exception_request_line_item.decision_date_time desc LIMIT 500";
    public static final String SELECT_REJECTED_EXCEPTIONS_LIST_OF_DRM_USER = "SELECT exception_request.excep_request_id from (SELECT customer.customer_id,customer.customer_name,customer.customer_sysco_id,region.region_name, opco.opco_name FROM dds.customer JOIN dds.opco ON opco.opco_id = customer.opco_id JOIN dds.region ON opco.region_id = region.region_id join dds.customer_sc_association sca on customer.customer_id =sca.customer_id   ) AS customer_filtered JOIN dds.exception_request on customer_filtered.customer_id=exception_request.customer_id " +
            "JOIN dds.exception_request_line_item on exception_request_line_item.excep_request_id=exception_request.excep_request_id WHERE ( '%s' <= exception_request.end_date) and (exception_request.end_date < '%s') " +
            "AND (exception_request.exception_type != 3 AND exception_request.exception_type != 4) AND exception_request.status in (10,30,15) AND exception_request_line_item.status in (10,20) GROUP by exception_request.excep_request_id, exception_request_line_item.decision_date_time ORDER BY exception_request_line_item.decision_date_time desc LIMIT 500";
    public static final String SELECT_PENDING_EXCEPTIONS_LIST_OF_DRM_USER = "SELECT exception_request.excep_request_id from" +
            " (SELECT customer.customer_id,customer.customer_name,customer.customer_sysco_id,region.region_name, opco.opco_name FROM dds.customer JOIN dds.opco ON opco.opco_id = customer.opco_id JOIN dds.region ON opco.region_id = region.region_id join dds.customer_sc_association sca on customer.customer_id =sca.customer_id   ) AS customer_filtered JOIN dds.exception_request on customer_filtered.customer_id=exception_request.customer_id " +
            "JOIN dds.exception_request_line_item on exception_request_line_item.excep_request_id=exception_request.excep_request_id WHERE ( '%s' <= exception_request.end_date) and (exception_request.end_date < '%s') AND (exception_request.exception_type != 3 AND exception_request.exception_type != 4) AND exception_request.status in (10,30,15) AND exception_request_line_item.status in (30,40) GROUP by " +
            "exception_request.excep_request_id, exception_request_line_item.decision_date_time ORDER BY exception_request_line_item.decision_date_time desc LIMIT 500";
    public static final String SELECT_ALL_EXCEPTIONS_LIST_OF_DRM_USER = "SELECT exception_request.excep_request_id from" +
            " (SELECT customer.customer_id,customer.customer_name,customer.customer_sysco_id,region.region_name, opco.opco_name FROM dds.customer JOIN dds.opco ON opco.opco_id = customer.opco_id JOIN dds.region ON opco.region_id = region.region_id join dds.customer_sc_association sca on customer.customer_id =sca.customer_id   ) AS customer_filtered JOIN dds.exception_request on customer_filtered.customer_id=exception_request.customer_id " +
            "JOIN dds.exception_request_line_item on exception_request_line_item.excep_request_id=exception_request.excep_request_id WHERE ( '%s' <= exception_request.end_date) and (exception_request.end_date < '%s') " +
            "AND (exception_request.exception_type != 3 AND exception_request.exception_type != 4) AND exception_request.status in (10,30,15) AND exception_request_line_item.status in (5,10,20,30,40,60,50) GROUP by exception_request.excep_request_id, exception_request_line_item.decision_date_time ORDER BY exception_request_line_item.decision_date_time desc LIMIT %s";

    public static final String SELECT_GROUP_CUSTOMERS_NOT_ASSIGNED_GIVEN_SC = "select table1.group_id ,table1.lead_sc_id ,table2.customer_id ,table3.cus_sc_id ,table2.customer_sysco_id ,table3.sc_id from  dds.group as table1 join dds.customer as table2 on table1.group_id =table2.group_id  join dds.customer_sc_association as table3 \n" +
            "on table2.customer_id =table3.customer_id join dds.sales_consultant as table4 on table3.sc_id =table4.sc_id where table4.sc_sysco_id != '<scID>' and  table1.lead_sc_id != '<leadScID>' and table1.opco_id ='<opcoID>' and table1.status ='1'and table2.status ='1' and table3.status ='1' and table4.status='1' and table2.group_id is not null limit 1";
    public static final String UPDATE_ASSIGN_GIVEN_CUSTOMER_TO_GIVEN_SC = "update  dds.customer_sc_association  set sc_id  ='<scId>' where customer_id = '<customerID>'";
    public static final String UPDATE_GIVEN_GROUP_LEAD_SC_TO_GIVEN_SC = "update  dds.group set lead_sc_id ='<leadSCId>' where  group_id ='<groupID>'";

    //Review Detail
    public static final String SELECT_SALES_CUSULTANT_DETAILS_FOR_A_CUSTOMER = "select * from dds.sales_consultant sc inner join dds.customer_sc_association sca on sc.sc_id = sca.sc_id where sca.customer_id ='<cus_ref_id>'";
    public static final String SELECT_CUSTOMER_SCORE_DETAILS_FOR_A_CUSTOMER = "select * from dds.customer_score  where customer_id ='<cus_ref_id>' and sysco_week='<sysco_week>' and status='1'";
    public static final String SELECT_CUSTOMER_SCORE_DETAILS_FROM_SCORE_ID = "select * from dds.customer_score  where customer_score_id =<cus_score_id>";
    public static final String SELECT_CUSTOMER_SCORE_METRICS_DETAILS_FROM_SCORE_ID = "select * from dds.customer_score_metrics  where customer_id =<cus_id> and sysco_week = '<sys_week>'";
    public static final String SELECT_ITEM_SCORE_DETAILS_FROM_SCORE_ID = "select * from dds.item_score  where item_score_id =<item_score_id>";
    public static final String SELECT_ITEM_SCORE_METRICS_DETAILS_FROM_SCORE_ID = "select * from dds.item_score_metrics  where item_id =<item_id> and sysco_week = '<sys_week>'";
    public static final String SELECT_GROUP_DETAILS_BY_GROUP_REF_ID = "select * from dds.group where group_id = '<group_ref_id>'";
    public static final String SELECT_SALES_CONSULTANT_DETAILS_FROM_SC_ID = "select * from dds.sales_consultant sc where sc.sc_id ='<sc_id>'";
    public static final String SELECT_GROUP_SCORE_DETAILS_FOR_A_GROUP = "select * from dds.group_score  where group_id ='<group_ref_id>' and sysco_week='<sysco_week>' and status='1'";
    public static final String SELECT_SC_DETAILS_FOR_A_GIVEN_SC_ID = "select * from dds.sc_detail sc where sc.sc_id ='<sc_id>' and sc.sysco_week='<sysco_week>' and sc.status='1'";
    public static final String SELECT_APPROVED_EXCEPTIONLIST_SC = "SELECT distinct(table1.excep_request_id) FROM dds.exception_request_line_item as table1 join dds.exception_request as table2 on table1.excep_request_id = table2.excep_request_id join dds.customer as table3 on table1.customer_id=table3.customer_id join dds.customer_sc_association as table4 on table2.customer_id = table4.customer_id join dds.sales_consultant table5 ON table4.sc_id = table5.sc_id where table2.end_date>='<current_date>' and table2.end_date < '<next_monday>' and table5.sc_sysco_id='<sc_id>' and (table2.exception_type != 3 AND table2.exception_type != 4) AND (table2.status=5 or table2.status=10 or table2.status=30 ) and table1.status in (50,60)";
    public static final String SELECT_PENDING_EXCEPTIONLIST_SC = "SELECT distinct(table1.excep_request_id) FROM dds.exception_request_line_item as table1 join dds.exception_request as table2 on table1.excep_request_id = table2.excep_request_id join dds.customer as table3 on table1.customer_id=table3.customer_id join dds.customer_sc_association as table4 on table2.customer_id = table4.customer_id join dds.sales_consultant table5 ON table4.sc_id = table5.sc_id where table2.end_date>='<current_date>' and table2.end_date < '<next_monday>' and table5.sc_sysco_id='<sc_id>' and (table2.exception_type != 3 AND table2.exception_type != 4) AND (table2.status=5 or table2.status=10 or table2.status=30 ) and table1.status in (30,40)";
    public static final String SELECT_PENDING_EXCEPTIONLIST_WITH_NETCOST = "SELECT * FROM dds.exception_request_line_item as li\n" +
            "left join dds.item_score as its on li.item_score_id = its.item_score_id \n" +
            "where its.sysco_week = '<sysco_week>' and li.mnpi_netcost != -1 order by li.decision_date_time desc limit 1";
    public static final String SELECT_REJECTED_EXCEPTIONLIST_SC = "SELECT distinct(table1.excep_request_id) FROM dds.exception_request_line_item as table1 join dds.exception_request as table2 on table1.excep_request_id = table2.excep_request_id join dds.customer as table3 on table1.customer_id=table3.customer_id join dds.customer_sc_association as table4 on table2.customer_id = table4.customer_id join dds.sales_consultant table5 ON table4.sc_id = table5.sc_id where table2.end_date>='<current_date>' and table2.end_date < '<next_monday>' and table5.sc_sysco_id='<sc_id>' and (table2.exception_type != 3 AND table2.exception_type != 4) AND (table2.status=5 or table2.status=10 or table2.status=30 ) and table1.status in (10,20)";
    public static final String SELECT_ALL_EXCEPTIONLIST_SC = "SELECT exception_request.excep_request_id,exception_request_line_item.excep_request_line_item_id,sales_consultant.sc_name,exception_request.parent_excep_request_id,item.supc,item.item_name,exception_request_line_item.approved_price,exception_request_line_item.list_price,exception_request_line_item.status,exception_request_line_item.decision_date_time,customer_filtered.customer_id,customer_filtered.customer_name,customer_filtered.customer_sysco_id,group_table.group_id,group_table.group_number,group_table.group_name,customer_filtered.region_name,customer_filtered.opco_name, array_agg(exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time order by exception_request_note.modified_date_time desc ) as notes, count(*) OVER() AS full_count FROM (  SELECT customer.customer_id,customer.customer_name,customer.customer_sysco_id,region.region_name, opco.opco_name FROM dds.customer_sc_association JOIN dds.sales_consultant ON customer_sc_association.sc_id = sales_consultant.sc_id and sales_consultant.sc_sysco_id ='<sc_id>' JOIN dds.customer on customer.customer_id = customer_sc_association.customer_id JOIN dds.opco ON opco.opco_id = customer.opco_id JOIN dds.region ON opco.region_id  =  region.region_id ) AS customer_filtered JOIN dds.exception_request on customer_filtered.customer_id=exception_request.customer_id JOIN dds.exception_request_line_item on exception_request_line_item.excep_request_id=exception_request.excep_request_id AND exception_request_line_item.customer_id = exception_request.customer_id LEFT JOIN dds.exception_request_note on exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id JOIN dds.item ON exception_request_line_item.item_id = item.item_id LEFT JOIN  dds.\"group\" group_table on exception_request.group_id = group_table.group_id LEFT JOIN dds.sales_consultant on sales_consultant.sc_sysco_id = exception_request.requester WHERE ( '<end_date>' <= exception_request.end_date) and ('<next_monday>' > exception_request.end_date) AND (exception_request.exception_type != 3 AND exception_request.exception_type != 4) AND (exception_request.status=5 or exception_request.status=10 or exception_request.status=30 )  AND (exception_request_line_item.status=5 or exception_request_line_item.status=10 or exception_request_line_item.status=20 or exception_request_line_item.status=30 or exception_request_line_item.status=40 or exception_request_line_item.status=50 or exception_request_line_item.status=60) GROUP BY exception_request_line_item.excep_request_line_item_id,sales_consultant.sc_name,customer_filtered.customer_name,customer_filtered.customer_sysco_id,item.item_name,group_table.group_id,customer_filtered.customer_id,exception_request.excep_request_id,item.supc,customer_filtered.region_name,customer_filtered.opco_name ORDER BY exception_request_line_item.decision_date_time desc OFFSET 0 LIMIT 500";
    public static final String DELETE_EXCEPTION = "delete from qa.dds.exception_request where created_by in ('<drm_id>','<dsm_id>','<sc_id>')";
    public static final String SELECT_REGION_NAME = "select  table3.region_name  from dds.opco table1 join dds.region table3 on table3.region_id=table1.region_id where table1.opco_id ='<opco>';";

    // customer groups trends
    public static final String GET_CUSTOMER_ID = "select * from qa.dds.customer c   where customer_id ='<customer_id>'";
    public static final String GET_CUSTOMER_METRICS = "select * from qa.dds.customer_score_metrics csm  where customer_id ='<customer_id>'";
    public static final String GET_GROUP_METRICS = "select * from qa.dds.group_score_metrics   where group_id ='<group_id>'";
    public static final String DELETE_CUSTOMER_METRICS = " delete from qa.dds.customer_score_metrics csm  where customer_id ='<customer_id>'";
    public static final String DELETE_GROUP_METRICS = " delete from qa.dds.group_score_metrics   where group_id ='<group_id>'";
    //update Exclusions
    public static final String UPDATE_EXCLUSION_FOR_CUSTOMER = "update dds.customer_settings t1 set status = '<status>'  where t1.customer_id = '<cust_id>' and t1.modification_type = '0'";
    public static final String UPDATE_EXCLUSION_FOR_GROUP = "update dds.group_settings t1 set status = '<status>'  where t1.group_id = '<group_id>' and t1.modification_type = '0'";
    public static final String UPDATE_EXCLUSION_FOR_CATEGORY = "update dds.item_category_settings t1 set status = '<status>' where t1.item_category_id = '<cat_id>' and t1.modification_type = '0' and t1.item_category_type = '1'";
    public static final String UPDATE_EXCLUSION_FOR_MAJOR_CATEGORY = "update dds.item_category_settings t1 set status = '<status>' where t1.item_category_id = '<cat_id>' and t1.modification_type = '0' and t1.item_category_type = '2'";
    public static final String UPDATE_EXCLUSION_FOR_ITEM = "update dds.item_settings t1 set status = '<status>'  where t1.item_id = '<item_id>' and t1.modification_type = '0'";
    public static final String UPDATE_THRESHOLD_FOR_ITEM = "update dds.item_settings t1 set status = '<status>'  where t1.item_id = '<item_id>' and t1.modification_type = '1'";
    public static final String UPDATE_EXCLUSION_FOR_INTERMEDIATE_CATEGORY = "update dds.item_category_settings t1 set status = '<status>' where t1.item_category_id = '<cat_id>' and t1.modification_type = '0' and t1.item_category_type = '3'";
    public static final String UPDATE_EXCLUSION_FOR_MINOR_CATEGORY = "update dds.item_category_settings t1 set status = '<status>' where t1.item_category_id = '<cat_id>' and t1.modification_type = '0' and t1.item_category_type = '4'";
    public static final String UPDATE_SETTINGS_TO_INACTIVE_FOR_CUSTOMER = "update dds.customer_settings t1 set status = 0  where t1.customer_id = '<cust_id>' and t1.status = 1";
    // Exception Review Items
    public static final String SELECT_DETAILS_FROM_EXCEPTION_REQUEST_TABLE = "select  * from dds.exception_request  where  excep_request_id='<excep_request_id>' and opco_id='067' limit 10";
    public static final String UPDATE_CREATED_DATE_IN_EXCEPTION_REQUEST_TABLE = "update dds.exception_request set created_date_time =? where excep_request_id in(select  excep_request_id from dds.exception_request  where excep_request_id=<excep_request_id> limit 1)";
    public static final String UPDATE_PARENT_EXCEPTION_REQUEST_ID_IN_EXCEPTION_REQUEST_TABLE = "update dds.exception_request set parent_excep_request_id =? where   excep_request_id ='<excep_request_id>' ";
    public static final String UPDATE_STARTDATE_ENDDATE_IN_EXCEPTION_REQUEST_TABLE = "update dds.exception_request set start_date =? , end_date = ?  where  excep_request_id ='<excep_request_id>'";
    // group
    public static final String SELECT_GROUP_DETAILS_IN_GROUP_TABLE = "select * from dds.group where group_id ='<group_id>'";
    // Exception Request Line Item Table
    public static final String SELECT_REVIEW_QUEUE_NEW_PENDING_EXCEPTION_COUNT_FOR_GIVEN_CUSTOMER = "select count(distinct t1.excep_request_id) from dds.exception_request t1 join dds.exception_request_line_item t2 on t1.excep_request_id = t2" +
            ".excep_request_id where t1.status in (30,65) and t2.status in (30,40) and t1.customer_id ='<customer_id>' and parent_excep_request_id is null";
    public static final String SELECT_REVIEW_QUEUE_RENEWED_PENDING_EXCEPTION_COUNT_FOR_GIVEN_CUSTOMER = "select count(distinct t1.excep_request_id) from dds.exception_request t1 join dds.exception_request_line_item t2 on t1.excep_request_id = t2" +
            ".excep_request_id where t1.status in (30,65) and t2.status in (30,40) and t1.customer_id ='<customer_id>' and parent_excep_request_id is not null";
    public static final String SELECT_REVIEW_QUEUE_NEW_PENDING_EXCEPTION_COUNT_FOR_GIVEN_GROUP = "select count(distinct t1" +
            ".excep_request_id) from dds.exception_request t1 join dds.exception_request_line_item t2 on t1.excep_request_id = t2.excep_request_id where t1.status in (30,65) and t2.status in (30,40) and t1.group_id ='<group_id>' and parent_excep_request_id is null";
    //delete review test data - request note
    public static final String DELETE_EXCEPTION_REQUEST_NOTE = "delete from dds.exception_request_note \n" +
            "where  excep_request_line_item_id in (select excep_request_line_item_id  from  dds.exception_request_line_item \n" +
            "where excep_request_id in (select excep_request_id from dds.exception_request where customer_id in ('<customer_id>')))";
    //delete review test data - line Item
    public static final String DELETE_EXCEPTION_LINE_ITEM = "delete from dds.exception_request_line_item \n" +
            "where  excep_request_id in (select excep_request_id from dds.exception_request where customer_id in ('<customer_id>'))";
    //delete review test data - request items
    public static final String DELETE_EXCEPTION_REQUEST = "delete from dds.exception_request \n" +
            "where  customer_id in('<customer_id>')";
    // get group ID for review Detail SC metrics Test
    public static final String SELECT_GROUP_ID = "select cu.group_id from  dds.exception_request er\n" +
            "inner join dds.exception_request_line_item erl on er.excep_request_id = erl.excep_request_id \n" +
            "inner join dds.customer cu on cu.customer_id = erl.customer_id \n" +
            "inner join dds.customer_sc_association csca on cu.customer_id = csca.customer_id \n" +
            "inner join dds.sales_consultant sac on csca.sc_id = sac.sc_id \n" +
            "inner join dds.sc_detail scd on csca.sc_id = scd.sc_id \n" +
            "where er.status in (5,10,30) and erl.status in (5,10,20,30,40,50,60) and cu.status =1 and cu.group_id is not null and scd.sysco_week='<sysco_week>' and cu.opco_id='<opco_id>' limit 1";
    // get customer ID for review detail SC metrics test
    public static final String SELECT_CUSTOMER_ID = "select cu.customer_id from  dds.exception_request er \n" +
            "inner join dds.exception_request_line_item erl on er.excep_request_id = erl.excep_request_id \n" +
            "inner join dds.customer cu on cu.customer_id = erl.customer_id \n" +
            "inner join dds.customer_sc_association csca on cu.customer_id = csca.customer_id \n" +
            "inner join dds.sales_consultant sac on csca.sc_id = sac.sc_id \n" +
            "inner join dds.sc_detail scd on csca.sc_id = scd.sc_id \n" +
            "where er.status in (5,10,30) and erl.status in (5,10,20,30,40,50,60) and cu.status =1 and cu.group_id is null and  scd.sysco_week='<sysco_week>' and cu.opco_id='<opco_id>' limit 1";
    // get customer ID in given opco for review detail SC metrics test
    public static final String SELECT_CUSTOMER_ID_WITH_METRICS_DATA_IN_GIVEN_OPCO = "select cu.customer_id from  dds.exception_request er " +
            "inner join dds.exception_request_line_item erl on er.excep_request_id = erl.excep_request_id \n" +
            "inner join dds.customer cu on cu.customer_id = erl.customer_id \n" +
            "inner join dds.customer_sc_association csca on cu.customer_id = csca.customer_id \n" +
            "inner join dds.sales_consultant sac on csca.sc_id = sac.sc_id \n" +
            "inner join dds.sc_detail scd on csca.sc_id = scd.sc_id \n" +
            "where er.status in (5,10,30) and erl.status in (5,10,20,30,40,50,60) and cu.status =1 and cu.group_id is" +
            " null and  cu.opco_id in ('<opco1>','<opco2>') and scd.sysco_week='<sysco_week>' limit 1";
    // get group ID in given opco for review Detail SC metrics Test
    public static final String SELECT_GROUP_ID_WITH_METRICS_DATA_IN_GIVEN_OPCO = "select cu.group_id from  dds.exception_request er\n" +
            "inner join dds.exception_request_line_item erl on er.excep_request_id = erl.excep_request_id \n" +
            "inner join dds.customer cu on cu.customer_id = erl.customer_id \n" +
            "inner join dds.customer_sc_association csca on cu.customer_id = csca.customer_id \n" +
            "inner join dds.sales_consultant sac on csca.sc_id = sac.sc_id \n" +
            "inner join dds.sc_detail scd on csca.sc_id = scd.sc_id \n" +
            "where er.status in (5,10,30) and erl.status in (5,10,20,30,40,50,60) and cu.status =1 and cu.group_id is" +
            " not null and cu.opco_id in ('<opco1>','<opco2>') and scd.sysco_week='<sysco_week>' limit 1";
    //Data HealthCheck
    public static final String SELECT_DETAILS_OF_A_SINGLE_ACTIVE_CUSTOMER_FOR_GIVEN_OPCO = "select customer_id from dds.customer where group_id is null and status='1' and  opco_id='<opco>'";
    public static final String SELECT_DETAILS_OF_A_ACTIVE_CUSTOMER_IN_A_GROUP_FOR_GIVEN_OPCO = "select customer_id from dds.customer where group_id is not null and status='1' and  opco_id='<opco>'";
    public static final String UPDATE_EXCEPTION_TO_APPROVED_STATUS = "update  dds.exception_request_line_item set status='60' where excep_request_id=<exceptionID>";
    public static final String UPDATE_EXCEPTION_TO_REJECTED_STATUS = "update  dds.exception_request_line_item set status='10' where excep_request_id=<exceptionID>";
    public static final String UPDATE_EXCEPTION_TO_PENDING_STATUS = "update  dds.exception_request_line_item set status='30' where excep_request_id=<exceptionID>";
    public static final String UPDATE_EXCEPTION_TO_MANUALLY_APPROVED_STATUS = "update  dds.exception_request_line_item set status='50' where excep_request_id=<exceptionID>";
    public static final String UPDATE_EXCEPTION_TO_ESCALATED_STATUS = "update  dds.exception_request_line_item set status='40' where excep_request_id=<exceptionID>";
    public static final String UPDATE_EXCEPTION_TO_MANUALLY_REJECTED_STATUS = "update  dds.exception_request_line_item set status='20' where excep_request_id=<exceptionID>";
    public static final String UPDATE_EXCEPTION_TO_ACTIVE = "update dds.exception_request set status='30' where excep_request_id=<exceptionID>";
    public static final String UPDATE_EXCEPTION_TO_AUTO_ESCALATED_STATUS = "update  dds.exception_request_line_item " +
            "set status='45' where excep_request_id=<exceptionID>";
    public static final String UPDATE_EXCEPTION_TO_CANCEL = "update dds.exception_request set status='50' where " +
            "excep_request_id=<exceptionID>";
    // review details page - Customer ID
    public static final String SELECT_CUSTOMER_ID_FOR_REVIEWDETAILS = "select cu.customer_id ,cus.sysco_week from dds.exception_request er \n" +
            "inner join dds.exception_request_line_item erl on er.excep_request_id = erl.excep_request_id \n"+
            "inner join dds.customer cu on cu.customer_id = erl.customer_id \n"+
            "inner join dds.customer_score cus on cu.customer_id = cus.customer_id\n"+
            "where er.status in (5,10,30) and erl.status in (5,10,20,30,40,50,60) and cu.status =1 and cus.status =1 and cus.sysco_week ='<sysco_week>' and cu.opco_id ='<opco_id>' and cu.group_id is null order by cus.net_sales desc limit 1";
    // review details page - Group ID
    public static final String SELECT_GROUP_ID_FOR_REVIEWDETAILS = "select cu.group_id,cus.sysco_week from dds.exception_request er \n" +
            "inner join dds.exception_request_line_item erl on er.excep_request_id = erl.excep_request_id \n"+
            "inner join dds.customer cu on cu.customer_id = erl.customer_id \n"+
            "inner join dds.customer_score cus on cu.customer_id = cus.customer_id\n"+
            "where er.status in (5,10,30) and erl.status in (5,10,20,30,40,50,60) and cu.status =1 and cus.status =1 and cus.sysco_week ='<sysco_week>' and cu.opco_id ='<opco_id>' and cu.group_id is not null order by cus.net_sales desc limit 1";
    public static final String FETCH_PENDING_REQUESTS_FOR_CUSTOMER ="select eli.excep_request_line_item_id,er.excep_request_id,er.parent_excep_request_id,item.supc,item.item_name,item.item_id,item.catch_weight_indicator,sales_consultant.sc_name,eli.approved_price,eli.price_requested,eli.original_approved_price,eli.list_price,eli.approved_price,eli.billback_indicator,eli.billback_amount,eli.status,eli.floor_price from qa.dds.exception_request er inner join dds.exception_request_line_item eli on er.excep_request_id = eli.excep_request_id inner join qa.dds.item on eli.item_id = item.item_id left join qa.dds.sales_consultant on sales_consultant.sc_sysco_id = er.requester where er.customer_id = '<customer_id>' and er.end_date >= '<end_date>' and eli.status in ('30','40','45') and er.status in ('5','10','30','65') order by er.excep_request_id desc";

    public static final String FETCH_PENDING_REQUESTS_FOR_GROUP ="select eli.excep_request_line_item_id,er.excep_request_id,er.parent_excep_request_id,item.supc,item.item_name,item.item_id,item.catch_weight_indicator,sales_consultant.sc_name,eli.approved_price,eli.price_requested,eli.original_approved_price,eli.list_price,eli.approved_price,eli.billback_indicator,eli.billback_amount,eli.status,eli.floor_price from qa.dds.exception_request er inner join dds.exception_request_line_item eli on er.excep_request_id = eli.excep_request_id inner join qa.dds.item on eli.item_id = item.item_id left join qa.dds.sales_consultant on sales_consultant.sc_sysco_id = er.requester where er.group_id='<group_id>' and er.end_date >= '<end_date>' and eli.status in ('30','40','45') and er.status in ('5','10','30','65') order by er.excep_request_id desc";

    public static final String FETCH_CUSTOMER_GROUP_INFO = "select * from dds.customer where customer_id = <customer_id>";
    public static final String FETCH_EXCEPTION_UPLOAD = "SELECT * FROM dds.exception_list_upload where exception_list_upload_id = <upload_id>";
    public static final String FETCH_EXCEPTION_UPLOAD_LINE_ITEM = "SELECT * FROM dds.exception_list_upload_line_item where exception_list_upload_id = <upload_id>";

    public static final String FETCH_EXCEPTION_UPLOAD_IDS_WITH_ERRORS = "select exception_list_upload_id \n" +
            "from dds.exception_list_upload_line_item\n" +
            "where error is not null \n" +
            "group by exception_list_upload_id having count(*)>2\n" +
            "limit 10";

    public static final String FETCH_EXCEPTION_UPLOAD_IDS_WITH_NO_ERRORS = "select t1.exception_list_upload_id from dds.exception_list_upload t1 inner join dds.exception_list_upload_line_item t2\n" +
            " on t1.exception_list_upload_id = t2.exception_list_upload_id where t1.status = '40' and t2.error is null";

    public static final String FETCH_EXCEPTION_UPLOAD_ERRORS_BY_UPLOAD_ID = "select * \n" +
            "from dds.exception_list_upload_line_item\n" +
            "where exception_list_upload_id = <uploadId> ";

    // delete item setting data from item setting table
    public static final String DELETE_ITEM_SETTING = "delete from dds.item_settings where item_id in(select item_id from dds.item i where supc ='<supc>' and opco_id ='<opco_id>')";
    public static final String DELETE_ITEM_SETTING_FROM_EX_REQUEST_ITEM_EXCLUDES_TABLE = "delete from dds.ex_request_item_excludes where item_settings_id in (select item_settings_id from dds.item_settings i where item_id in(select item_id from dds.item i where supc ='<supc>' and opco_id ='<opco_id>'))";

    public static final String SELECT_ITEM_SETTING = "select itms.item_id,itms.current_approve_threshold ,itms.current_reject_threshold, itms.item_settings_id  from dds.item  it inner join \n" +
            "dds.item_settings  itms \n" +
            "on it.item_id = itms.item_id\n" +
            "where it.supc ='<supc>'and opco_id ='<opco_id>'";
    public static final String SELECT_ITEM_SETTING_COUNT = "select count (*)  from dds.item  it inner join \n" +
            "dds.item_settings  itms \n" +
            "on it.item_id = itms.item_id\n" +
            "where it.supc ='<supc>'and opco_id ='<opco_id>'";
    public static final String SELECT_EXCLUSION_ITEM_SETTING = "select it.supc,it.item_id  from dds.item  it inner join \n" +
            "dds.item_settings  itms \n" +
            "on it.item_id = itms.item_id\n" +
            "where itms.modification_type =0\n" +
            "and it.opco_id ='<opco_id>' and itms.status =1 order by it.item_id desc limit 1";
    public static final String DELETE_ITEM_FROM_ITEMTABLE = "delete from dds.item_settings where item_id in(select item_id from dds.item i where supc ='<supc>' and opco_id ='<opco_id>')";
    // Data will be inserted by Review que API once it is completed, Until that data is inserted by manually.
    //insert metrics data for customer
    public static int customerID = Integer.parseInt(Constants.CUSTOMER_ID);
    public static final String INSERT_CUSTOMER_METRICS_DATA = "INSERT INTO qa.dds.customer_score_metrics  (created_by , created_date_time , customer_id ,modified_by ,modified_date_time ,status,sysco_week,weekly_net_sales,lines_of_exceptions_percentage,weekly_case,weekly_gross_profit_percentage)\n" +
            "VALUES ('System generated', '2020-10-01 08:39:01'," + "'" + customerID + "'" + ",'System generated','2020-08-21 21:07:18','1','202117',\n" +
            "'[{\"week\":\"202113\",\"custWklyNetSales\":0},{\"week\":\"202114\",\"custWklyNetSales\":0},{\"week\":\"202115\",\"custWklyNetSales\":0},{\"week\":\"202117\",\"custWklyNetSales\":0}]','50',\n" +
            "'[{\"week\":\"202113\",\"custWklyCases\":0},{\"week\":\"202114\",\"custWklyCases\":0},{\"week\":\"202115\",\"custWklyCases\":0},{\"week\":\"202117\",\"custWklyCases\":0}]',\n" +
            "'[{\"week\":\"202113\",\"custGpPerc\":0},{\"week\":\"202114\",\"custGpPerc\":0},{\"week\":\"202115\",\"custGpPerc\":0},{\"week\":\"202117\",\"custGpPerc\":0}]');\n";
    //insert metrics data for groups
    public static int groupID = Integer.parseInt(Constants.GROUP_ID);
    public static final String INSERT_GROUP_CUSTOMER_METRICS_DATA = "INSERT INTO qa.dds.group_score_metrics  (created_by , created_date_time , group_id ,modified_by ,modified_date_time ,status,sysco_week,weekly_net_sales,lines_of_exceptions_percentage,weekly_cases,weekly_gross_profit_percentage)\n" +
            "VALUES ('System generated', '2020-10-01 08:39:01'," + "'" + groupID + "'" + ",'System generated','2020-08-21 21:07:18','1','202117',\n" +
            "'[{\"week\":\"202113\",\"groupWklyNetSales\":1564.44},{\"week\":\"202114\",\"groupWklyNetSales\":1956.7},{\"week\":\"202115\",\"groupWklyNetSales\":1342.85},{\"week\":\"202117\",\"groupWklyNetSales\":1787.24}]','50',\n" +
            "'[{\"week\":\"202113\",\"groupWklyCases\":39},{\"week\":\"202114\",\"groupWklyCases\":52.42},{\"week\":\"202117\",\"groupWklyCases\":37.15},{\"week\":\"202117\",\"groupWklyCases\":41.42}]',\n" +
            "'[{\"week\":\"202113\",\"groupWklyCases\":39},{\"week\":\"202114\",\"groupWklyCases\":52.42},{\"week\":\"202117\",\"groupWklyCases\":37.15},{\"week\":\"202117\",\"groupWklyCases\":41.42}]');";
    public static int OPCO19CustomerID = Integer.parseInt(Constants.CUSTOMER_ID_IN_19_OPCO);
    public static final String INSERT_CUSTOMER_METRICS_DATA_19_OPCO = "INSERT INTO qa.dds.customer_score_metrics  (created_by , created_date_time , customer_id ,modified_by ,modified_date_time ,status,sysco_week,weekly_net_sales,lines_of_exceptions_percentage,weekly_case,weekly_gross_profit_percentage)\n" +
            "VALUES ('System generated', '2020-10-01 08:39:01'," + "'" + OPCO19CustomerID + "'" + ",'System generated','2020-08-21 21:07:18','1','202117',\n" +
            "'[{\"week\":\"202113\",\"custWklyNetSales\":0},{\"week\":\"202114\",\"custWklyNetSales\":0},{\"week\":\"202117\",\"custWklyNetSales\":0},{\"week\":\"202117\",\"custWklyNetSales\":0}]','50',\n" +
            "'[{\"week\":\"202113\",\"custWklyCases\":0},{\"week\":\"202114\",\"custWklyCases\":0},{\"week\":\"202117\",\"custWklyCases\":0},{\"week\":\"202117\",\"custWklyCases\":0}]',\n" +
            "'[{\"week\":\"202113\",\"custGpPerc\":0},{\"week\":\"202114\",\"custGpPerc\":0},{\"week\":\"202115\",\"custGpPerc\":0},{\"week\":\"202117\",\"custGpPerc\":0}]');\n";
    public static int opco19GroupCustomerID = Integer.parseInt(Constants.GROUP_CUSTOMER_ID_IN_19_OPCO);
    public static final String INSERT_GROUP_CUSTOMER_METRICS_DATA_19_OPCO = "INSERT INTO qa.dds.group_score_metrics  (created_by , created_date_time , group_id ,modified_by ,modified_date_time ,status,sysco_week,weekly_net_sales,lines_of_exceptions_percentage,weekly_cases,weekly_gross_profit_percentage)\n" +
            "VALUES ('System generated', '2020-10-01 08:39:01'," + "'" + opco19GroupCustomerID + "'" + ",'System generated','2020-08-21 21:07:18','1','202117',\n" +
            "'[{\"week\":\"202113\",\"groupWklyNetSales\":1564.44},{\"week\":\"202114\",\"groupWklyNetSales\":1956.7},{\"week\":\"202115\",\"groupWklyNetSales\":1342.85},{\"week\":\"202117\",\"groupWklyNetSales\":1787.24}]','50',\n" +
            "'[{\"week\":\"202113\",\"groupWklyCases\":39},{\"week\":\"202114\",\"groupWklyCases\":52.42},{\"week\":\"202117\",\"groupWklyCases\":37.15},{\"week\":\"202117\",\"groupWklyCases\":41.42}]',\n" +
            "'[{\"week\":\"202113\",\"groupWklyCases\":39},{\"week\":\"202114\",\"groupWklyCases\":52.42},{\"week\":\"202117\",\"groupWklyCases\":37.15},{\"week\":\"202117\",\"groupWklyCases\":41.42}]');";


    //view Item Setting
    public static String GET_ITEM_SETTING_EXCLUSION_THRESHOLD="SELECT count(*) FROM dds.item_settings where modification_type='<modification_type>' and status='1'";
    public static String GET_ITEM_SETTING_EXCLUSION_THRESHOLD_FOR_DRM="SELECT count(*) FROM qa.dds.item_settings as table1 join qa.dds.item as table2 on table1.item_id = table2.item_id where table1.modification_type='<modification_type>' and table1.status='1' and  table2.opco_id='<opco_id>'";
    public static String GET_ITEM_SETTING_DETAILS="select item_settings_id,current_approve_threshold,current_reject_threshold,notes,item_id,price_zone FROM qa.dds.item_settings where item_settings_id='<item_settings_id>'";
    public static String GET_OPCO_ID="select table2.opco_id FROM qa.dds.item_settings as table1 join qa.dds.item as table2 on table1.item_id = table2.item_id where table1.modification_type='<modification_type>' and table1.status='1' order by opco_id ASC , supc ASC;";
    public static String GET_SUPC="select table2.supc FROM qa.dds.item_settings as table1 join qa.dds.item as table2 on table1.item_id = table2.item_id where table1.modification_type='<modification_type>' and table1.status='1' order by opco_id ASC , supc ASC;";
    public static String GET_SORTED_ITEM_SETTINGS_ID="select table1.item_settings_id FROM qa.dds.item_settings as table1 join qa.dds.item as table2 on table1.item_id = table2.item_id where table1.modification_type='<modification_type>' and table1.status='1' order by table2.opco_id ASC ,table2.supc ASC, table1.price_zone ASC;";


    public static final String GET_CATEGORY_SETTING_FROM_ID = "select item_category_settings_id, current_approve_threshold , current_reject_threshold , modification_type , notes, margin,renew_margin, item_category.category_id, category_name, item_category_type, item_category_settings.opco_id, opco_name, market.market_id, " +
            "market_name, region.region_id, region_name from dds.item_category_settings left join dds.item_category on item_category_settings.item_category_id = item_category.category_id left join dds.opco on opco.opco_id = item_category_settings.opco_id left join dds.region on region.region_id = opco.region_id left " +
            "join dds.market on market.market_id = opco.market_id where item_category_settings.item_category_type = 1 and item_category_settings.status = 1 and item_category_settings.item_category_settings_id = %s";
    public static final String GET_MAJOR_CATEGORY_SETTING_FROM_ID = "select item_category_settings_id, current_approve_threshold , current_reject_threshold , modification_type , notes, margin,renew_margin, item_category.category_id, category_name, item_major_category.major_category_id, major_category_name, " +
            "item_category_type, item_category_settings.opco_id, opco_name, market.market_id, market_name, region.region_id, region_name from dds.item_category_settings left join dds.item_major_category on item_category_settings.item_category_id = item_major_category.major_category_id left join dds.item_category on " +
            "item_major_category.category_id = item_category.category_id left join dds.opco on opco.opco_id = item_category_settings.opco_id left join dds.region on region.region_id = opco.region_id left join dds.market on market.market_id = opco.market_id where item_category_settings.item_category_type = 2 " +
            "and item_category_settings.status = 1 and item_category_settings.item_category_settings_id = %s";
    public static final String GET_INTER_CATEGORY_SETTING_FROM_ID = "select item_category_settings_id, current_approve_threshold , current_reject_threshold , modification_type , notes, margin,renew_margin, item_category.category_id, category_name, item_major_category.major_category_id, major_category_name, " +
            "item_intermediate_category.intermediate_category_id, intermediate_category_name, item_category_type, item_category_settings.opco_id, opco_name, market.market_id, market_name, region.region_id, region_name from dds.item_category_settings left join dds.item_intermediate_category on " +
            "item_category_settings.item_category_id = item_intermediate_category.intermediate_category_id left join dds.item_major_category on item_intermediate_category.major_category_id = item_major_category.major_category_id left join dds.item_category on item_major_category.category_id = item_category.category_id " +
            "left join dds.opco on opco.opco_id = item_category_settings.opco_id left join dds.region on region.region_id = opco.region_id left join dds.market on market.market_id = opco.market_id where item_category_settings.item_category_type = 3 and item_category_settings.status = 1 " +
            "and item_category_settings.item_category_settings_id = %s";
    public static final String GET_MINOR_CATEGORY_SETTING_FROM_ID = "select item_category_settings_id, current_approve_threshold , current_reject_threshold , modification_type , notes, margin,renew_margin, item_category.category_id, category_name, item_major_category.major_category_id, major_category_name, " +
            "item_intermediate_category.intermediate_category_id, intermediate_category_name, item_minor_category.minor_category_id, minor_category_name, item_category_type, item_category_settings.opco_id, opco_name, market.market_id, market_name, region.region_id, region_name from dds.item_category_settings " +
            "left join dds.item_minor_category on item_category_settings.item_category_id = item_minor_category.minor_category_id left join dds.item_intermediate_category on item_minor_category.intermediate_category_id = item_intermediate_category.intermediate_category_id left join dds.item_major_category " +
            "on item_intermediate_category.major_category_id = item_major_category.major_category_id left join dds.item_category on item_major_category.category_id = item_category.category_id left join dds.opco on opco.opco_id = item_category_settings.opco_id left join dds.region on region.region_id = opco.region_id " +
            "left join dds.market on market.market_id = opco.market_id where item_category_settings.item_category_type = 4 and item_category_settings.status = 1 and item_category_settings.item_category_settings_id = %s";
    // Add item setting margin api
    public static final String SELECT_ITEM_SETTING_MARGIN = "SELECT * FROM dds.item where supc='<supc>' and status='1' and opco_id='<opco_id>'";
    public static final String UPDATE_ITEM_SETTING_MARGIN = "update dds.item_settings set status =? where item_id ='<itemID>'and modification_type ='2' and status =1";
    public static final String SELECT_OPCO_SETTING_FROM_OPCO_PZ_0 = "select opco_exception_threshold.opco_exc_threshold_id, opco_exception_threshold.margin, opco_exception_threshold.current_approve_threshold,opco_exception_threshold.current_reject_threshold, opco.opco_id, opco.opco_name, market.market_id, market.market_name, region.region_id, region.region_name,opco_exception_threshold.price_zone,opco_exception_threshold.renew_margin from dds.opco left join dds.opco_exception_threshold " +
            "on opco.opco_id = opco_exception_threshold.opco_id left join dds.market on market.market_id = opco.market_id left join dds.region on region.region_id = opco.region_id where opco.opco_id = %s and opco_exception_threshold.modification_type = %s and opco_exception_threshold.status = 1 and opco_exception_threshold.price_zone  = 0 ";
    public static final String SELECT_ALL_OPCOS ="select opco_id from dds.opco where status=1";
    public static final String DELETE_OPCO_SETTING = "delete from dds.opco_exception_threshold where opco_exc_threshold_id = %s";
    public static final String DELETE_OPCO_SETTING_FROM_OPCO = "delete from dds.opco_exception_threshold where opco_id = %s and modification_type = %s";
    public static final String DELETE_OPCO_SETTING_BY_STATUS_CHANGE = "UPDATE dds.opco_exception_threshold SET status = 0 WHERE status = 1 and opco_id = %s and modification_type = %s";
    public static final String GET_ACTIVE_OPCO_DETAILS = "select opco_id from dds.opco where opco_id = <opco_id> and status = 1";
    public static final String DELETE_All_THE_OPCO_SETTING_BY_STATUS_CHANGE = "UPDATE dds.opco_exception_threshold SET status = 0 WHERE status = 1 and opco_id = %s ";

    public static final String SELECT_OPCO_WITH_HISTORY = "SELECT opco_id\n" +
            "FROM dds.opco_exception_threshold\n" +
            "WHERE opco_id in \n" +
            "(SELECT opco_id \n" +
            "FROM dds.opco_exception_threshold\n" +
            "where modification_type =1\n" +
            "group by opco_id having count(*) > 3\n" +
            ")\n" +
            "order by created_date_time desc limit 10";
    public static final String SELECT_OPCO_SETTING_HISTORY = "select * from dds.opco_exception_threshold where opco_id = <opcoId> and modification_type =1 and modified_date_time > '<lastData>' and price_zone= '<priceZone>' order by modified_date_time desc";
    public static final String SELECT_ITEM_SETTING_FROM_SETTING_ID = "select opco.opco_id, opco.opco_name, market.market_id, market.market_name, region.region_id, region.region_name, margin, price_zone, item_settings.item_settings_id, item.item_id, item.supc, item.item_name, item_category.category_name, " +
            "item_major_category.major_category_name, item_intermediate_category.intermediate_category_name, item_minor_category.minor_category_name, item.brand from dds.item_settings left join dds.item on item.item_id = item_settings.item_id left join dds.opco on item.opco_id = opco.opco_id left join dds.market on opco.market_id = market.market_id " +
            "left join dds.region on region.region_id = opco.region_id left join dds.item_category on item_category.category_id = item.category_id left join  dds.item_major_category on item_major_category.major_category_id = item.major_category_id left join dds.item_intermediate_category " +
            "on item_intermediate_category.intermediate_category_id = item.intermediate_category_id left join dds.item_minor_category on item_minor_category.minor_category_id = item.minor_category_id where item_settings.status = 1 and item_settings.modification_type = %s and item_settings.item_settings_id = %s";
    public static final String DELETE_ITEM_SETTING_FROM_ID = "delete from dds.item_settings where item_settings.item_settings_id = %s";
    public static final String SELECT_OPCO_SETTING_RECORD = "select * from dds.opco_exception_threshold where opco_id=%s and status=%s and modification_type=%s";
    public static final String SELECT_OPCO_SETTING_FROM_ID = "SELECT status FROM dds.opco_exception_threshold WHERE opco_exc_threshold_id=%s";
    public static final String DELETE_CUSTOMER_THRESH_EXCLUS_SETTINGS = "delete from dds.customer_settings where (customer_id = %s or customer_id = %s) and (modification_type = 1 or modification_type = 0)";
    public static final String UPDATE_CUSTOMER_STATUS = "update dds.customer set status = %s where customer_id = %s";
    public static final String UPDATE_CATEGORY_SETTING_STATUS = "update dds.item_category_settings set status = %s where item_category_id = %s and item_category_type = %s and modification_type = %s and status = %s and opco_id = %s";
    public static final String SELECT_CATEGORY_ITEM_SETTING_RECORD = "SELECT * FROM dds.item_category_settings as t1 where t1.status = %s and t1.modification_type = %s and item_category_id = %s and item_category_type = %s and opco_id = %s and price_zone = %s";
    public static final String SELECT_CATEGORY_ITEM_SETTING_RECORD_FROM_ID = "SELECT * FROM dds.item_category_settings where item_category_settings_id = %s";
    public static final String DELETE_CATEGORY_MARGIN_SETTING_DATA = "delete from dds.item_category_settings where modification_type = 2 and (opco_id = 10 and (item_category_id = 42 or item_category_id = 41) and item_category_type = 1) or (opco_id = 12 and item_category_id = 42)";
    public static final String SELECT_ACTIVE_CUSTOMERS_WITH_NO_GROUP = "select customer_id from dds.customer where status = 1 and group_id is null limit 2";
    public static final String SELECT_INACTIVE_CUSTOMERS_WITH_NO_GROUP = "select customer_id from dds.customer where status = 0 and group_id is null limit 1";
    public static final String GET_UPLOAD_HISTORY_DATA = "SELECT * FROM dds.exception_list_upload order by uploaded_date_time desc limit 50";
    public static final String SELECT_ITEM_MARGIN_SETTING = "select * from dds.item_settings where item_id=%s and status='1' and modification_type='2'";
    public static final String SELECT_ITEM_MARGIN_SETTING_WITH_PZ = "select * from dds.item_settings where item_id=%s and status=%s and modification_type='2' and price_zone=%s";
    public static final String SELECT_ITEM_MARGIN_SETTING_FROM_ID = "select * from dds.item_settings where item_settings_id=%s";

    // View Category Setting
    public static final String GET_CATEGORY_SETTING_EXCLUSION_THRESHOLD="SELECT count(*) FROM qa.dds.item_category_settings where modification_type='<modification_type>' and status='1'";
    public static final String GET_CATEGORY_SETTING_EXCLUSION_THRESHOLD_FOR_OPCO="SELECT count(*) FROM qa.dds.item_category_settings where modification_type='<modification_type>' and status='1' and opco_id='<opco_id>'";
    public static final String GET_CATEGORY_SETTING_DETAILS="select opco_id,current_approve_threshold,current_reject_threshold,notes,item_category_settings_id,item_category_type,item_category_id,margin,price_zone FROM qa.dds.item_category_settings where modification_type='<modification_type>' and status='1' and item_category_settings_id='<item_settings_id>'";

    //Item Setting History
    public static final String GET_ITEM_ID="select item_id FROM qa.dds.item_settings where modification_type='<modification_type>' and status='1' limit 1";
    public static final String GET_ITEM_HISTORY_COUNT="SELECT count(*) FROM qa.dds.item_settings where modification_type='<modification_type>' and item_id='<item_id>' and price_zone=<priceZone> and created_date_time between current_date-365 and current_date+1";
    public static final String GET_ITEM_HISTORY_UNAVAILABLE_ITEM_ID="SELECT distinct(item_id) FROM qa.dds.item where item_id not in(select item_id from qa.dds.item_settings where modification_type='<modification_type>') limit 1";
    public static final String GET_ITEM_SETTING_HISTORY_DETAILS="SELECT current_approve_threshold,current_reject_threshold,notes,modified_by FROM qa.dds.item_settings where modification_type='<modification_type>' and item_id='<item_id>' and price_zone=<priceZone> and modified_date_time <= current_timestamp order by modified_date_time desc";
    public static final String GET_ITEM_SETTING_ACTIVE_RECORD_DETAILS="SELECT current_approve_threshold,current_reject_threshold,notes,modified_by FROM qa.dds.item_settings where modification_type='<modification_type>' and item_id='<item_id>' and status = 1";

    //Item Setting History
    public static final String GET_CATEGORY_ID="select item_category_id,opco_id,item_category_type  from qa.dds.item_category_settings where modification_type='<modification_type>' limit 1";
    public static final String GET_CATEGORY_HISTORY_COUNT="SELECT count(*) FROM qa.dds.item_category_settings where modification_type='<modification_type>' and item_category_id='<category_id>' and opco_id='<opco_id>' and item_category_type='<category_type>' and price_zone=<priceZone> and created_date_time between current_date-365 and current_date+1";
    //ADD Category Setting
    public static final String DELETE_CATEGORY_SETTING = "DELETE FROM dds.item_category_settings WHERE status=1 and item_category_id='<category_id>' and opco_id='<opco_id>'";
    public static final String DELETE_CATEGORY_SETTING_FROM_CAT_ID = "UPDATE dds.item_category_settings SET status = 0 WHERE status=1 and item_category_id=%s and item_category_type = %s";
    public static final String GET_EDIT_CATEGORY_SETTING = "select current_approve_threshold,current_reject_threshold,notes from qa.dds.item_category_settings where modification_type='<modification_type>' and status=1 and item_category_id='<category_id>' and item_category_type='<category_type>' and opco_id='<opco_id>' and price_zone='3'";
    public static final String GET_EDIT_CATEGORY_SETTING_FOR_GIVEN_PZ = "select current_approve_threshold,current_reject_threshold,notes from qa.dds.item_category_settings where modification_type='<modification_type>' and status=1 and item_category_id='<category_id>' and item_category_type='<category_type>' and opco_id='<opco_id>' and price_zone='<price_zone>'";


    // Customer Settings
    public static String GET_CUSTOMERS_WITH_NO_SETTINGS="SELECT cu.customer_id \n" +
            "FROM dds.customer cu \n" +
            "WHERE cu.status = 1 and cu.group_id IS NULL and cu.customer_id not in (select customer_id from dds.customer_settings where status= 1) order by cu.created_date_time desc limit 10";

    public static String GET_CUSTOMERS_WITH_NO_SETTINGS_FROM_OPCO="SELECT cu.customer_id \n" +
            "FROM dds.customer cu \n" +
            "LEFT JOIN dds.customer_score cus ON cus.customer_id = cu.customer_id \n" +
            "WHERE cu.status = 1 and cu.group_id IS NULL and cus.sysco_week = '<syscoWeek>' and cu.opco_id = <opcoId>  order by cu.created_date_time asc limit 10";
    public static String GET_GROUP_CUSTOMERS_THAT_NO_SETTINGS_FROM_OPCO ="SELECT cu.customer_id \n" +
            "FROM dds.customer cu \n" +
            "LEFT JOIN dds.customer_score cus ON cus.customer_id = cu.customer_id \n" +
            "WHERE cu.status = 1 and cu.group_id IS NOT NULL and cus.sysco_week = '<syscoWeek>' and cu.opco_id = <opcoId>  order by cu.created_date_time asc limit 10";

    public static final String SELECT_CUSTOMER_SETTING = "select * from dds.customer_settings where customer_id = <customerId>";
    public static final String DELETE_CUSTOMER_SETTING_DATA = "delete from dds.customer_settings where customer_id IN (<idList>)";
    public static String GET_CUSTOMERS_WITH_SETTINGS_HISTORY="SELECT customer_id \n" +
            "FROM dds.customer_settings\n" +
            "WHERE customer_id in (\n" +
            "SELECT customer_id \n" +
            "FROM dds.customer_settings\n" +
            "where modification_type =1 and modified_date_time > '<modifiedDate>' " +
            "group by customer_id having count(*) > 3\n" +
            ")\n" +
            "order by created_date_time desc limit 10";
    public static String GET_CUSTOMER_SETTINGS = "SELECT * FROM dds.customer_settings as table1 join dds.customer as table2 on table1.customer_id = table2.customer_id where table1.modification_type = <mod_type> and table1.status = 1";
    public static String GET_CUSTOMER_SETTING = "select * from dds.customer_settings where customer_settings.customer_settings_id = <customerSettingId>";
    public static String GET_CUSTOMER_SETTINGS_IN_OPCO = "SELECT * FROM dds.customer_settings as table1 join dds.customer as table2 on table1.customer_id = table2.customer_id where table2.opco_id IN (<opco_list>) and table1.modification_type = <mod_type> and table1.status = 1";
    public static final String SELECT_CUSTOMER_SETTING_HISTORY = "select * from dds.customer_settings where customer_id = <customerId> and modification_type =1 and modified_date_time > '<lastData>' and price_zone=<priceZone> order by modified_date_time desc";
    public static final String GET_SINGLE_EXCEPTION_FOR_NOTE_TEST = "SELECT * FROM dds.exception_request_line_item as table1 join dds.exception_request as table2 on table1.excep_request_id = table2.excep_request_id join dds.customer as table3 on table1.customer_id=table3.customer_id where table1.created_date_time >='%s' AND table3.opco_id in (%s) AND table2.status = 30 order by table1.decision_date_time desc limit 1";
    public static final String GET_SINGLE_EXCEPTION_FOR_NOTE_TEST_RENEWED = "SELECT * FROM dds.exception_request_line_item as table1 join dds.exception_request as table2 on table1.excep_request_id = table2.excep_request_id join dds.customer as table3 on table1.customer_id=table3.customer_id where table3.opco_id in (%s) AND table2.status = 30 AND table2.parent_excep_request_id is not null order by table1.excep_request_line_item_id desc limit 1";
    public static final String GET_SINGLE_EXCEPTION_FOR_NOTE_TEST_SC = "SELECT * FROM dds.exception_request_line_item join dds.exception_request on exception_request_line_item.excep_request_id = exception_request.excep_request_id join dds.customer on exception_request_line_item.customer_id=customer.customer_id where exception_request_line_item.created_date_time >= '%s' AND customer.opco_id in (%s) AND (exception_request.status = 5 or exception_request.status = 10 or exception_request.status = 30) and customer.customer_id = %s order by exception_request_line_item.decision_date_time desc limit 1";
    public static final String DELETE_ALL_NOTES_FOR_EXCEPTION_BY_USER = "delete FROM dds.exception_request_note where created_by = '%s' AND excep_request_line_item_id = %s";
    public static final String DELETE_ALL_NOTES_FOR_EXCEPTION = "delete FROM dds.exception_request_note where excep_request_line_item_id = %s";
    public static final String SELECT_NOTES_FOR_EXCEPTION_LINE_ID = "select * from dds.exception_request_note where created_by = '%s' and excep_request_line_item_id = %s";
    public static final String GET_CUSTOMER_ID_FOR_SC_USER = "select customer.customer_id from dds.customer join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on sales_consultant.sc_id = customer_sc_association.sc_id where sales_consultant.sc_name = '%s' limit 1";
    public static final String GET_CUSTOMER_SYSCO_ID_FOR_SC_USER = "select customer.customer_sysco_id from dds.customer join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on sales_consultant.sc_id = customer_sc_association.sc_id where sales_consultant.sc_sysco_id = '%s' limit 1";

    // Group Settings
    public static String GET_GROUPS_WITH_NO_SETTINGS="SELECT gr.group_id \n" +
            "FROM dds.group gr \n" +
            "LEFT JOIN dds.group_settings grs ON grs.group_id = gr.group_id \n" +
            "WHERE gr.status = 1 and grs.group_id IS null order by gr.created_date_time desc limit 10";
    public static final String SELECT_GROUP_SETTING = "select * from dds.group_settings where group_id = <groupID>";
    public static final String DELETE_GROUP_SETTING_DATA = "delete from dds.group_settings where group_id IN (<idList>)";
    public static final String GET_GROUP_SETTING = "select gr.group_number, gr.group_name, sc.sc_name ,opco.opco_id , opco.region_id , opco.market_id \n" +
            "from dds.group as gr \n" +
            "left join dds.group_settings grs ON grs.group_id = gr.group_id\n" +
            "left join dds.opco opco on gr.opco_id = opco.opco_id \n" +
            "left join dds.sales_consultant sc on gr.lead_sc_id = sc.sc_id\n" +
            "where gr.status = 1 and grs.group_id IS null and opco.region_id is not null and opco.market_id is not null \n" +
            "order by gr.created_date_time desc limit 1";
    public static String GET_GROUPS_WITH_SETTINGS_HISTORY="SELECT group_id \n" +
            "FROM dds.group_settings\n" +
            "WHERE group_id in (\n" +
            "SELECT group_id \n" +
            "FROM dds.group_settings\n" +
            "where modification_type =1 and modified_date_time > '<modifiedDate>' " +
            "group by group_id having count(*) > 3\n" +
            ")\n" +
            "order by created_date_time desc limit 10";
    public static final String SELECT_GROUP_SETTING_HISTORY = "select * from dds.group_settings where group_id = <groupId> and modification_type =1 and modified_date_time > '<lastData>' and price_zone=<priceZone> order by modified_date_time desc";
    public static String GET_GROUP_SETTINGS = "SELECT * FROM dds.group_settings as table1 join dds.group as table2 on table1.group_id = table2.group_id where table1.modification_type = <mod_type> and table1.status = 1";
    public static String GET_GROUP_SETTING_FOR_ID = "select * from dds.group_settings where group_settings.group_settings_id = <groupSettingId>";
    public static String GET_GROUP_SETTINGS_IN_OPCO = "SELECT * FROM dds.group_settings as table1 join dds.group as table2 on table1.group_id = table2.group_id where table2.opco_id IN (<opco_list>) and table1.modification_type = <mod_type> and table1.status = 1";

    // Edit Item setting
    public static final String GET_CUSTOMER_FOR_HISTORY_NOT_BELONG_TO_OPCO = "select customer.customer_id from dds.exception_request_line_item_history join dds.customer on customer.customer_id = exception_request_line_item_history.customer_id where opco_id != %s limit 1";
    public static final String GET_ACTIVE_EXCEPTION_CUSTOMER_ITEM_ID = "select er.customer_id, eli.item_id from  qa.dds.exception_request er inner join dds.exception_request_line_item eli on er.excep_request_id  = eli.excep_request_id where er.group_id  is null and er.end_date >= '%s' and eli.status in ('50','60','10','20') and er.status = 30 limit 1";
    public static final String GET_ACTIVE_EXCEPTION_GROUP_ITEM_ID = "select er.group_id, eli.item_id from  qa.dds.exception_request er inner join dds.exception_request_line_item eli on er.excep_request_id  = eli.excep_request_id where er.group_id  is not null and er.end_date >= '%s' and eli.status in ('50','60','10','20') and er.status = 30 limit 1";
    public static final String GET_ITEM_EXCEPTIONS_HISTORY = "SELECT exception_request_history.excep_request_id,exception_request_history.parent_excep_request_id,exception_request_line_item_history.excep_request_line_item_id,exception_request_history.exception_type,exception_request_history.start_date,exception_request_history.end_date,sales_consultant.sc_name,exception_request_line_item_history.list_price,exception_request_line_item_history.approved_price,exception_request_line_item_history.status,item.catch_weight_indicator,array_agg( exception_request_note_history.note || '\\x001' || exception_request_note_history.created_by || '\\x001' || exception_request_note_history.modified_date_time ORDER BY exception_request_note_history.modified_date_time desc ) as notes FROM dds.exception_request_history JOIN dds.exception_request_line_item_history ON exception_request_history.excep_request_id = exception_request_line_item_history.excep_request_id AND exception_request_line_item_history.customer_id = %s  AND exception_request_line_item_history.item_id = %s AND exception_request_history.end_date >= '%s' LEFT JOIN dds.sales_consultant ON sales_consultant.sc_sysco_id = exception_request_history.requester LEFT JOIN dds.exception_request_note_history ON (exception_request_note_history.excep_request_line_item_id = exception_request_line_item_history.excep_request_line_item_id or exception_request_note_history.parent_excep_request_id = exception_request_history.parent_excep_request_id ) and (exception_request_note_history.modified_date_time <= exception_request_history.end_date)  left join dds.item on exception_request_line_item_history.item_id = item.item_id WHERE (exception_request_line_item_history.status = 50 OR exception_request_line_item_history.status = 60 OR exception_request_line_item_history.status = 10 OR exception_request_line_item_history.status = 20 " +
            "OR exception_request_line_item_history.status = 45 or (exception_request_line_item_history.status = 30 and exception_request_history.parent_excep_request_id is not null)) and (exception_request_history.status=40 OR exception_request_history.status=30 OR exception_request_history.status=50 OR exception_request_history.status=20 OR exception_request_history.status=60) GROUP BY exception_request_history.excep_request_id,sales_consultant.sc_name,exception_request_line_item_history.excep_request_line_item_id,item.catch_weight_indicator ORDER BY exception_request_line_item_history.excep_request_line_item_id desc";
    public static final String GET_CURRENT_ITEM_EXCEPTIONS_HISTORY = "SELECT exception_request.excep_request_id,exception_request.exception_type,exception_request.parent_excep_request_id,exception_request_line_item.excep_request_line_item_id,exception_request.start_date,exception_request.end_date,sales_consultant.sc_name,exception_request_line_item.list_price,exception_request_line_item.approved_price,exception_request_line_item.status,item.catch_weight_indicator,array_agg( exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time ORDER BY exception_request_note.modified_date_time desc ) as notes FROM dds.exception_request JOIN dds.exception_request_line_item ON exception_request.excep_request_id = exception_request_line_item.excep_request_id AND exception_request_line_item.customer_id = %s  AND exception_request_line_item.item_id = %s  AND exception_request.end_date >= '%s' LEFT JOIN dds.sales_consultant ON sales_consultant.sc_sysco_id = exception_request.requester LEFT JOIN dds.exception_request_note ON exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id LEFT JOIN dds.item ON exception_request_line_item.item_id = item.item_id WHERE (exception_request_line_item.status = 50 OR exception_request_line_item.status = 60 OR exception_request_line_item.status = 10 OR exception_request_line_item.status = 20 ) and (exception_request.status=5 or exception_request.status=10 or exception_request.status=30 )  GROUP BY exception_request.excep_request_id,sales_consultant.sc_name,exception_request_line_item.excep_request_line_item_id,item.catch_weight_indicator ORDER BY exception_request_line_item.excep_request_line_item_id DESC ";
    public static final String GET_CURRENT_ITEM_EXCEPTIONS_HISTORY_GROUP = "SELECT exception_request.excep_request_id,exception_request.exception_type,exception_request.parent_excep_request_id,exception_request_line_item.excep_request_line_item_id,exception_request.start_date,exception_request.end_date,sales_consultant.sc_name,exception_request_line_item.list_price,exception_request_line_item.approved_price,exception_request_line_item.status,item.catch_weight_indicator,array_agg( exception_request_note.note || '\\x001' || exception_request_note.created_by || '\\x001' || exception_request_note.modified_date_time ORDER BY exception_request_note.modified_date_time desc ) as notes FROM dds.exception_request JOIN dds.exception_request_line_item ON exception_request.excep_request_id = exception_request_line_item.excep_request_id AND exception_request.group_id = %s  AND exception_request_line_item.item_id = %s  AND exception_request_line_item.customer_id = exception_request.customer_id AND exception_request.end_date >= '%s' LEFT JOIN dds.sales_consultant ON sales_consultant.sc_sysco_id = exception_request.requester LEFT JOIN dds.exception_request_note ON exception_request_note.excep_request_line_item_id = exception_request_line_item.excep_request_line_item_id LEFT JOIN dds.item ON exception_request_line_item.item_id = item.item_id WHERE ( exception_request_line_item.status = 50 OR exception_request_line_item.status = 60 OR exception_request_line_item.status = 10 OR exception_request_line_item.status = 20 ) and (exception_request.status=5 or exception_request.status=10 or exception_request.status=30 )  GROUP BY exception_request.excep_request_id,sales_consultant.sc_name,exception_request_line_item.excep_request_line_item_id,item.catch_weight_indicator ORDER BY exception_request_line_item.excep_request_line_item_id DESC";
    public static final String GET_ITEM_EXCEPTIONS_HISTORY_GROUP = "SELECT exception_request_history.excep_request_id,exception_request_history.parent_excep_request_id,exception_request_line_item_history.excep_request_line_item_id,exception_request_history.exception_type,exception_request_history.start_date,exception_request_history.end_date,sales_consultant.sc_name,exception_request_line_item_history.list_price,exception_request_line_item_history.approved_price,exception_request_line_item_history.status,item.catch_weight_indicator,array_agg( exception_request_note_history.note || '\\x001' || exception_request_note_history.created_by || '\\x001' || exception_request_note_history.modified_date_time ORDER BY exception_request_note_history.modified_date_time desc ) as notes FROM dds.exception_request_history JOIN dds.exception_request_line_item_history ON exception_request_history.excep_request_id = exception_request_line_item_history.excep_request_id AND exception_request_history.group_id = %s  AND exception_request_line_item_history.item_id = %s  AND exception_request_line_item_history.customer_id = exception_request_history.customer_id AND exception_request_history.end_date >= '%s' LEFT JOIN dds.sales_consultant ON sales_consultant.sc_sysco_id = exception_request_history.requester LEFT JOIN dds.exception_request_note_history ON exception_request_note_history.excep_request_line_item_id = exception_request_line_item_history.excep_request_line_item_id LEFT JOIN dds.item ON exception_request_line_item_history.item_id = item.item_id WHERE ( exception_request_line_item_history.status = 50 OR exception_request_line_item_history.status = 60 OR exception_request_line_item_history.status = 10 OR exception_request_line_item_history.status = 20 " +
            "OR exception_request_line_item_history.status = 45 or (exception_request_line_item_history.status = 30 and exception_request_history.parent_excep_request_id is not null)) and (exception_request_history.status=40 OR exception_request_history.status=30 OR exception_request_history.status=50 OR exception_request_history.status=20 OR exception_request_history.status=60) GROUP BY exception_request_history.excep_request_id,sales_consultant.sc_name,exception_request_line_item_history.excep_request_line_item_id,item.catch_weight_indicator ORDER BY exception_request_line_item_history.excep_request_line_item_id DESC";
    public static final String GET_VALID_CUSTOMER_ID = "SELECT customer_id FROM dds.customer WHERE status = 1 AND group_id is null and opco_id = %s limit 1";
    public static final String GET_VALID_GROUP_ID = "select group_id from dds.group where status = 1 and opco_id = %s limit 1";
    public static final String GET_VALID_ITEM_ID = "select item_id from dds.item where status = 1 and opco_id = %s limit 1";
    public static final String GET_CUSTOMER_NOT_ASSIGNED_TO_USER = "select customer_id from dds.customer where status = 1 and opco_id != %s limit 1";
    public static final String GET_GROUP_NOT_ASSIGNED_TO_USER = "select group_id from dds.group where status = 1 and opco_id != %s limit 1";
    public static final String GET_CUSTOMER_LINE_ITEM_FOR_REVIEW_DETAIL = "select excep_request_line_item_id, exception_request.customer_id, item_score.item_score_id from dds.exception_request join dds.exception_request_line_item on exception_request.excep_request_id = exception_request_line_item.excep_request_id join dds.item_score on exception_request_line_item.item_score_id = item_score.item_score_id where exception_request.group_id is null and exception_request.status in (30) and exception_request_line_item.status in (10, 20, 30, 40, 50, 60) limit 1";
    public static final String UPDATE_ITEM_SCORE_SYSCO_WEEK = "update dds.item_score set sysco_week = '%s' where item_score_id = %s";
    public static final String GET_GROUP_LINE_ITEM_FOR_REVIEW_DETAIL = "select excep_request_line_item_id, exception_request.group_id, item_score.item_score_id from dds.exception_request join dds.exception_request_line_item on exception_request.excep_request_id = exception_request_line_item.excep_request_id join dds.item_score on exception_request_line_item.item_score_id = item_score.item_score_id where exception_request.group_id is not null and exception_request.status in (30) and exception_request_line_item.status in (10, 20, 30, 40, 50, 60) limit 1";
    public static final String GET_ACTIVE_CUSTOMER_FOR_OPCO = "select customer_id from dds.customer where status = 1 and opco_id = %s and group_id is null";
    public static final String GET_ACTIVE_GROUP_FOR_OPCO = "select group_id from dds.group where status = 1 and opco_id = %s";
    public static final String GET_ACTIVE_ITEM_IN_OPCO = "select item_id from dds.item where status = 1 and opco_id = %s";
    public static final String GET_ACTIVE_ITEM_SUPC_IN_OPCO = "select supc from dds.item where status = 1 and uom='CS' and opco_id = %s";
    public static final String GET_LINE_ITEM_FROM_EXCEPTION_ID = "select excep_request_line_item_id, exception_request.customer_id, item_score.item_score_id, group_id from dds.exception_request join dds.exception_request_line_item on exception_request_line_item.excep_request_id = exception_request.excep_request_id join dds.item_score on exception_request_line_item.item_score_id = item_score.item_score_id where exception_request.excep_request_id = %s";
    public static final String GET_ITEM_SCORE_DETAILS = "select item_name, item_score.*, exception_request_line_item.mnpi_netcost,exception_request_line_item.adj_netcost from dds.exception_request_line_item join dds.item on exception_request_line_item.item_id = item.item_id join dds.item_score on item_score.item_score_id = exception_request_line_item.item_score_id where excep_request_line_item_id = %s and sysco_week = '%s' and item_score.status = 1";
    public static final String GET_GROUP_ITEM_SCORE_DETAILS = "select item_name, group_item_score.*, exception_request_line_item.mnpi_netcost, exception_request_line_item.adj_netcost from dds.exception_request join dds.exception_request_line_item on exception_request.excep_request_id = exception_request_line_item.excep_request_id and exception_request.customer_id = exception_request_line_item.customer_id left join dds.group_item_score on exception_request_line_item.item_id = group_item_score.item_id and exception_request.group_id  = group_item_score.group_id inner join dds.item on item.item_id = exception_request_line_item.item_id where exception_request.group_id = %s and excep_request_line_item_id = %s and group_item_score.sysco_week = '%s' and group_item_score.status = 1";

    public static final String SELECT_ITEM_STATUS = "select itms.status  from dds.item  it inner join \n" +
            "dds.item_settings  itms \n" +
            "on it.item_id = itms.item_id\n" +
            "where it.supc ='<supc>'and opco_id ='<opco_id>'";
    public static final String SELECT_ITEM_STATUS_OF_ITEM_SETTING="SELECT status FROM qa.dds.item_settings where modification_type='<modification_type>' and item_id='<item_id>'";

    public static final String SELECT_ITEM_DETAILS_OF_ITEM_SETTING="select current_approve_threshold,current_reject_threshold,notes,margin FROM qa.dds.item_settings where modification_type='<modification_type>' and item_id='<item_id>'";


    //Update status of the exceptions of given customer/combination
    public static final String GET_EXCEPTIONS_FOR_GIVEN_CUSTOMER_ITEM_AND_LINE_ITEM_STATUS = "select * from dds.exception_request t1 inner join dds.exception_request_line_item t2 on t1.excep_request_id = t2.excep_request_id inner join dds.customer t3 on \n" +
            "t1.customer_id = t3.customer_id inner join dds.item t4 on t2.item_id = t4.item_id where t2.status = " +
            "'<status>' and t3.customer_sysco_id = '<customer>' and t4.supc = '<supc>';\n";
    public static final String SELECT_SALES_CUSULTANT_DETAILS_FOR_A_CUSTOMER_OPCO = "select * from dds" +
            ".sales_consultant sc inner join dds.customer_sc_association sca on sc.sc_id = sca.sc_id inner join " +
            "dds.customer cu on cu.customer_id = sca.customer_id where cu.customer_sysco_id ='<customer>' and cu.opco_id = '<opco>'";
    public static final String GET_EXCEPTIONS_FOR_GIVEN_GROUP_ITEM_AND_LINE_ITEM_STATUS = "select * from dds" +
            ".exception_request t1 inner join dds.exception_request_line_item t2 on t1.excep_request_id = t2.excep_request_id inner join dds.customer t3 on \n" +
            "t1.customer_id = t3.customer_id inner join dds.item t4 on t2.item_id = t4.item_id where t2.status = " +
            "'<status>' and t1.group_id = '<group>' and t4.supc = '<supc>';\n";
    public static final String SELECT_SALES_CUSULTANT_DETAILS_BY_SC_ID = "select * from dds.sales_consultant sc where" +
            " sc.sc_id = '<sc_id>'";
    public static final String SET_STATUS_OF_CUSTOMER_BY_CUSTOMER_SYSCO_ID = "update dds.customer set status " +
            "='<status>' where customer_sysco_id = '<customer>' and opco_id = '<opco>'";
    public static final String SET_STATUS_OF_ITEM = "update dds.item set status " +
            "='<status>' where supc = '<supc>' and opco_id = '<opco>'";
    public static final String GET_EXCEPTIONS_FOR_GIVEN_CUSTOMER_AND_LINE_ITEM_STATUS = "select * from dds.exception_request t1 inner join dds.exception_request_line_item t2 on t1.excep_request_id = t2.excep_request_id inner join dds.customer t3 on " +
            "t1.customer_id = t3.customer_id where t2.status = '<status>' and t3.customer_sysco_id = '<customer>' and t1.opco_id = '<opco>'";
    public static final String GET_EXCEPTIONS_FOR_GIVEN_GROUP_AND_LINE_ITEM_STATUS = "select * from dds.exception_request" +
            " t1 inner join dds.exception_request_line_item t2 on t1.excep_request_id = t2.excep_request_id where t2.status = '<status>' and t1.group_id = '<group>' and t1.opco_id = '<opco>'";
    public static final String SELECT_CATEGORY_DETAILS_OF_CATEGORY_SETTING="select current_approve_threshold,current_reject_threshold,notes,margin,item_category_type,renew_margin,modified_by,price_zone from dds.item_category_settings where item_category_id='<item_category_id>' and modification_type='<modification_type>' and status='1'  and opco_id='<opco_id>' and price_zone = '3'";
    public static final String SELECT_ACTIVE_CATEGORY_DETAILS_OF_CATEGORY_SETTING_FOR_GIVEN_PZ ="select current_approve_threshold,current_reject_threshold,notes,margin,item_category_type,renew_margin,modified_by,price_zone,status from dds.item_category_settings where item_category_id='<item_category_id>' and modification_type='<modification_type>' and status='1'  and opco_id='<opco_id>' and price_zone = '<price_zone>'";

    //Review Detail - Group Customers
    public static final String SELECT_ACTIVE_GROUP_DETAILS_IN_GIVEN_OPCO = "select * from dds.group where status = " +
            "'1' and opco_id = '<opco_id>' and group_id in (select group_id from dds.customer where group_id is not " +
            "null and status = '1' \n" +
            "group by group_id having count(*) > 1) limit 1";
    public static final String SELECT_DETAILS_OF_A_ACTIVE_CUSTOMERS_IN_A_GIVEN_GROUP = "select customer_id from dds" +
            ".customer where group_id = '<group_id>' and status='1' ";

    public static final String SELECT_CUSTOMER_AND_ITEM_ID = "select customer_id, item_id \n" +
            "from  dds.item_score_metrics \n" +
            "where status =1 and sysco_week = '<syscoWeek>'";
    public static final String SELECT_GROUP_AND_ITEM_ID = "select group_id, item_id \n" +
            "from  dds.group_item_score_metrics \n" +
            "where status =1 and sysco_week = '<syscoWeek>'";

    public static final String SELECT_PARENT_EXCEPTION_ID_FROM_NOTE_HISTORY = "select distinct er.excep_request_id, er.parent_excep_request_id\n" +
            "from dds.exception_request_note_history nh\n" +
            "inner join dds.exception_request_line_item_history li on nh.excep_request_line_item_id = li.excep_request_line_item_id\n" +
            "inner join dds.exception_request er on er.parent_excep_request_id = li.excep_request_id\n" +
            "where nh.excep_request_line_item_id in (\n" +
            "select excep_request_line_item_id\n" +
            "from dds.exception_request_note_history\n" +
            "group by excep_request_line_item_id having count(*) >= 1\n" +
            ")\n" +
            "limit 10";

    public static final String SELECT_NOTE_HISTORY = "select exception_request_note_history.note, exception_request_note_history.created_by\n" +
            "from dds.exception_request_history\n" +
            "join dds.exception_request_line_item_history on exception_request_history.excep_request_id = exception_request_line_item_history.excep_request_id\n" +
            "and exception_request_line_item_history.customer_id = exception_request_history.customer_id\n" +
            "join dds.exception_request_note_history on exception_request_line_item_history.excep_request_line_item_id = exception_request_note_history.excep_request_line_item_id\n" +
            "where exception_request_note_history.parent_excep_request_id = <parentId>\n" +
            "order by exception_request_note_history.created_date_time desc";
    public static final String UPDATE_GROUP_ID_FOR_A_CUSTOMER ="UPDATE dds.customer SET group_id='<group_id>' WHERE customer_sysco_id in ('<customerID>') and opco_id = '<opco_id>'";

    //Multi opco category settings
    public static final String UPDATE_CATEGORY_SETTING_TO_INACTIVE = "UPDATE dds.item_category_settings set status = " +
            "'0' WHERE status = 1 and item_category_id='<category_id>' and item_category_type='<category_type>' and " +
            "opco_id in (<opco_id>)";
    public static final String SELECT_CATEGORY_ITEM_SETTINGS_REC0RD_FOR_GIVEN_CATEGORY = "SELECT item_category_settings_id FROM dds" +
            ".item_category_settings as " +
            "t1 where " +
            "t1.status = <status> and t1.modification_type = <mod_type> and item_category_id = <cat_id> and " +
            "item_category_type = <cat_type> ";
    public static final String SELECT_CATEGORY_ITEM_SETTINGS_REC0RD_FOR_GIVEN_CATEGORY_OPCO_PZ = "SELECT item_category_settings_id FROM dds" +
            ".item_category_settings as " +
            "t1 where " +
            "t1.status = <status> and t1.modification_type = <mod_type> and item_category_id = <cat_id> and " +
            "item_category_type = <cat_type> and opco_id = <opco> and price_zone = <priceZone>" ;
    public static final String GET_CATEGORY_SETTING_EXCLUSION_THRESHOLD_FOR_REGION="SELECT count(*) FROM qa.dds.item_category_settings where modification_type='<modification_type>' and status='1' and opco_id in ('<opco_id1>','<opco_id2>')";
    public static final String GET_USER_ID="SELECT user_id FROM qa.dds.\"user\" where sysco_id='<sysco_id>' and status='1'";
    public static final String GET_REFERENCE_ID="SELECT reference_id FROM dds.user_user_role_association where user_id='<user_id>' and status='1'";
    public static final String GET_OPCO_ID_LIST="SELECT opco_id_list FROM dds.region where region_id='<region_id>'";
    public static String GET_ITEM_SETTING_EXCLUSION_THRESHOLD_FOR_REGION="SELECT count(*) FROM qa.dds.item_settings as table1 join qa.dds.item as table2 on table1.item_id = table2.item_id where table1.modification_type='<modification_type>' and table1.status='1' and  table2.opco_id in ('<opco_id1>','<opco_id2>')";

    //Opco Level Exclusions
    public static final String SELECT_NON_EXCLUDED_ITEMS_IN_GIVEN_OPCOS = "select supc from dds.item t1 left join dds" +
            ".item_settings t2 on t1.item_id = t2.item_id where t1.status ='1' and t2.item_id is null and (t1.opco_id" +
            " ='<opco_id1>' or t1.opco_id= '<opco_id2>')  and t1.uom = '<uom>' group by supc having count(t1.opco_id)" +
            " = 2";
    public static final String SELECT_NON_EXCLUDED_ITEMS_IN_GIVEN_OPCOS_FOR_ADD_ITEM_SETTING = "select supc from dds.item t1 where t1.status ='1' and (t1.opco_id" +
            " ='<opco_id1>' or t1.opco_id= '<opco_id2>')  and t1.uom = '<uom>' and t1.brand is not null and t1" +
            ".catch_weight_indicator is not null and t1.ship_split_only is not null and t1.item_id not in (select t2.item_id from dds.item_settings t2 where t2.status =1) group by supc having count(t1.opco_id) = 2";
    public static final String SELECT_ITEM_DETAILS_BY_SUPC_AND_OPCO = "select * from dds.item where supc = '<supc>' " +
            "and  opco_id='<opco>' and status='1' and uom='<uom>'";
    public static final String SELECT_NON_EXCLUDED_CUSTOMERS_IN_GIVEN_OPCOS = "select customer_sysco_id from dds.customer where group_id is null and (opco_id='<opco_id1>' or opco_id= '<opco_id2>') and " +
            "customer_id not in (select customer_id from dds.customer_settings where modification_type = 0 and status =1) group by customer_sysco_id having count(customer_sysco_id) > 1";
    public static final String SELECT_NON_EXCLUDED_GROUP_CUSTOMERS_IN_GIVEN_OPCOS = "select customer_sysco_id from " +
            "dds.customer t1 left join" +
            " dds.customer_settings t2 on t1.customer_id = t2.customer_id where t1.status ='1' and t2.customer_id is null and (t1.opco_id" +
            " ='<opco_id1>' or t1.opco_id= '<opco_id2>')  and t1.group_id is not null group by customer_sysco_id " +
            "having count(t1.opco_id) = 2";
    public static final String SELECT_CATEGORY_DETAILS_OF_ITEM = "SELECT * FROM dds.item_category where category_id =" +
            " '<category_id>'";
    public static final String SELECT_MAJOR_CATEGORY_DETAILS_OF_ITEM = "SELECT * FROM dds.item_major_category where " +
            "major_category_id ='<category_id>'";
    public static final String SELECT_INTERMEDIATE_CATEGORY_DETAILS_OF_ITEM = "SELECT * FROM dds.item_intermediate_category where intermediate_category_id ='<category_id>'";
    public static final String SELECT_MINOR_CATEGORY_DETAILS_OF_ITEM = "SELECT * FROM dds.item_minor_category where minor_category_id ='<category_id>'";

    public static final String GET_EXCEPTION_REQUEST_DETAILS_FOR_LINE_ITEM = "select exception_request.excep_request_id, customer_name, customer_sysco_id, customer.customer_id, item.supc, item_name, exception_request_line_item.price_requested, exception_request_line_item.list_price, exception_request_line_item.status, exception_request_line_item.list_price, sales_consultant.sc_sysco_id, group_table.group_number, group_table.group_id, group_name, region_name, opco_name, parent_excep_request_id, decision_date_time, exception_request_line_item.excep_request_line_item_id from dds.exception_request join dds.exception_request_line_item on exception_request.excep_request_id = exception_request_line_item.excep_request_id and exception_request.customer_id = exception_request_line_item.customer_id join dds.customer on exception_request.customer_id = customer.customer_id left join dds.group as \"group_table\" on group_table.group_id = exception_request.group_id join dds.item on exception_request_line_item.item_id = item.item_id join dds.opco on customer.opco_id = opco.opco_id join dds.region on region.region_id = opco.region_id left join dds.sales_consultant on sales_consultant.sc_name = exception_request.requester where exception_request_line_item.excep_request_line_item_id = %s";

    public static final String SELECT_FIRST_TWENTY_ACCOUNTS_INCLUDED_SEARCHED_NAME="SELECT * FROM dds.customer where customer_name like '%CITY%' and status = 1 and group_id is null order by customer_sysco_id limit 20";
    public static final String SELECT_FIRST_TWENTY_ACCOUNTS_INCLUDED_SEARCHED_SYSCO_ID="SELECT * FROM dds.customer where customer_sysco_id like '%012229%' and status = 1 and group_id is null order by customer_sysco_id limit 20";
    public static final String SELECT_FIRST_TWENTY_ACCOUNTS_INCLUDED_SEARCHED_SC_ID="SELECT * FROM dds.customer as table1 join dds.customer_sc_association as table2 on table1.customer_id = table2.customer_id join dds.sales_consultant as table3 on table2.sc_id = table3.sc_id  where table1.status=1 and table1.group_id isnull and table3.sc_name like'Neal%' order by table1.customer_sysco_id asc limit 20";
    public static final String SELECT_FIRST_TWENTY_ACCOUNTS_INCLUDED_SEARCHED_MARKET_ID="SELECT * FROM dds.customer as table1 join dds.opco as table2 on table1.opco_id = table2.opco_id  where table1.status=1 and table1.group_id isnull and table2.market_id=901 order by table1.customer_sysco_id asc limit 20";
    public static final String SELECT_FIRST_TWENTY_ACCOUNTS_INCLUDED_SEARCHED_REGION_ID="SELECT * FROM dds.customer as table1 join dds.opco as table2 on table1.opco_id = table2.opco_id  where table1.status=1 and table1.group_id isnull and table2.region_id=14 order by table1.customer_sysco_id asc limit 20";
    public static final String SELECT_FIRST_TWENTY_ACCOUNTS_INCLUDED_SEARCHED_SITE_ID=" SELECT * FROM dds.customer where status=1 and opco_id='40' and group_id isnull order by customer_sysco_id asc limit 20";
    public static final String SELECT_ITEM_FROM_SUPC = "select * from dds.item where supc = '%s' limit 1";
    public static final String SELECT_ITEM_FROM_SUPC_OPCO = "select * from dds.item where supc = '%s' and opco_id = '%s' limit 1";
    public static final String SELECT_ACTIVE_CUSTOMER_DETAILS = "select * from dds.customer where opco_id = %s and status = 1 and group_id is null";
    public static final String SELECT_ACTIVE_CUSTOMER_IN_GROUP_DETAILS = "select * from dds.customer where opco_id = %s and status = 1 and group_id is not null";
    public static final String DELETE_EX_REQUEST_ITEM_EXCLUDE_RECORDS = "delete from dds.ex_request_item_excludes where item_settings_id = %s";


    //user management
    public static final String SELECT_ACTIVE_USERS = "SELECT table1.first_name,table1.last_name,table1.sysco_id,table1.email,table3.role_name,table2.usbl,table2.user_role_privilege_id,table2.reference_id \n" +
            "FROM dds.user as table1 \n" +
            "inner join dds.user_user_role_association as table2 on table1.user_id = table2.user_id \n" +
            "inner join dds.user_role as table3 on table2.user_role_id=table3.user_role_id \n" +
            "where table1.status=1  and table2.status=1";
    public static final String GET_ACTIVE_CUSTOMER_IN_GROUP_AND_OPCO = "select * from dds.customer where status = 1 and group_id is not null and opco_id = %s limit 1";
    public static final String DELETE_CUSTOMER_SETTINGS_OF_GROUP = "delete from dds.customer_settings where customer_id in (select customer_id from dds.customer where group_id = %s)";
    public static final String GET_LINE_ITEMS_FROM_UPLOAD_ID = "select exception_request_line_item.excep_request_line_item_id, exception_request_line_item.status, exception_request_line_item.customer_id from dds.exception_request_line_item where excep_request_id = (select excep_request_id from dds.exception_list_upload join dds.exception_list_upload_line_item on exception_list_upload.exception_list_upload_id = exception_list_upload_line_item.exception_list_upload_id where exception_list_upload.exception_list_upload_id = %s)";
    public static final String GET_EXCEP_REQ_STATUS_FROM_UPLOAD_ID = "select exception_request.status from dds.exception_request where excep_request_id = (select excep_request_id from dds.exception_list_upload join dds.exception_list_upload_line_item on exception_list_upload.exception_list_upload_id = exception_list_upload_line_item.exception_list_upload_id where exception_list_upload.exception_list_upload_id = %s)";
    public static final String GET_CUSTOMER_COUNT_IN_GROUP = "select count(customer_id) from dds.customer where group_id = %s and status = 1";
    public static final String GET_ITEM_PRICE_DATE = "select customer_reference_price, unit_price, gross_price from dds.exception_item_price_data where excep_request_line_item_id = %s";
    public static final String GET_ITEM_PRICE_DATE_FROM_EXCEP_ID = "select customer_reference_price, unit_price, gross_price from dds.exception_item_price_data where excep_request_line_item_id = (select excep_request_line_item_id from dds.exception_request_line_item where excep_request_id = %s limit 1)";
    public static final String SELECT_EXCEPTION_CUSTOMER_EXCLUDE_FROM_LINE_ID = "select * from dds.ex_request_customer_excludes where excep_request_line_item_id = %s";
    public static final String SELECT_EXCEPTION_GROUP_EXCLUDE_FROM_LINE_ID = "select * from dds.ex_request_group_excludes where excep_request_line_item_id = %s";
    public static final String SELECT_EXCEPTION_ITEM_CATEGORY_EXCLUDE_FROM_LINE_ID = "select * from dds.ex_request_item_category_excludes where excep_request_line_item_id = %s";
    public static final String SELECT_EXCEPTION_ITEM_EXCLUDE_FROM_LINE_ID = "select * from dds.ex_request_item_excludes where excep_request_line_item_id = %s";
    public static final String SELECT_ITEM_SETTING_SCORE = "select * from dds.item_settings where item_id in (select item_id from dds.item where supc = '%s' and opco_id = '%s') and status = 1 and modification_type = 0";

    //Bridge Pricing Upload
    public static final String FETCH_EXCEPTION_UPLOAD_BY_FILE_NAME = "SELECT * FROM dds.exception_list_upload where file_name = '<file_name>'";
    public static final String GET_UPLOAD_LINE_ITEM_IDS_BY_UPLOAD_ID_AND_CUSTOMER_ID = "SELECT " +
            "exception_list_upload_line_item_id " +
            "FROM dds.exception_list_upload_line_item where exception_list_upload_id = '<exception_list_upload_id>' " +
            "and customer_sysco_id = '<customer_sysco_id>'";
    public static final String GET_UPLOAD_LINE_ITEM_DETAILS = "SELECT * " +
            "FROM dds.exception_list_upload_line_item where exception_list_upload_line_item_id = '<exception_list_upload_line_item_id>'";
    public static final String GET_EXCEP_LINE_ITEM_FOR_EXCLUDED_UPLOAD = "select exception_request_line_item.excep_request_line_item_id, exception_request_line_item.status, exception_request_line_item.customer_id from dds.exception_request_line_item join dds.customer on customer.customer_id = exception_request_line_item.customer_id join dds.exception_request on exception_request.excep_request_id = exception_request_line_item.excep_request_id and exception_request.customer_id = exception_request_line_item.customer_id join dds.item on item.item_id = exception_request_line_item.item_id where item.supc = (select supc from dds.exception_list_upload_line_item where exception_list_upload_id = %s) and customer.customer_sysco_id = (select customer_sysco_id from dds.exception_list_upload_line_item where exception_list_upload_id = %s) and exception_type = %s and exception_request.opco_id = %s order by excep_request_line_item_id desc";
    public static final String FETCH_EXCEPTION_UPLOAD_BY_FILE_ID = "SELECT * FROM dds.exception_list_upload_line_item where exception_list_upload_id in (<exception_list_upload_id>)";

    //Get data from SUS push table
    public static final String GET_SUS_PUSH_DATA ="SELECT * FROM dds.exception_sus_push_status where excep_request_id='<exception_request_id>'";

    //Upload Exception
    public static final String GET_ALREADY_APPROVED_EXCEPTIONS_FOR_GIVEN_CUSTOMER_ITEM_AND_OPCO = "select * from dds.exception_request t1 inner join dds.exception_request_line_item t2 on t1.excep_request_id = t2.excep_request_id inner join dds.customer t3 on \n" +
            "t1.customer_id = t3.customer_id inner join dds.item t4 on t2.item_id = t4.item_id where t2.status IN " +
            "('60','50') and t1.status in ('30','15') and t3.customer_sysco_id = '<customer>' and t4.supc = '<supc>' " +
            "and t1.opco_id = '<opco>'";
    public static final String GET_ALREADY_APPROVED_EXCEPTIONS_FOR_GIVEN_GROUP_ITEM_AND_OPCO = "select * from dds" +
            ".exception_request t1 inner join dds.exception_request_line_item t2 on t1.excep_request_id = t2.excep_request_id inner join dds.customer t3 on \n" +
            "t1.customer_id = t3.customer_id inner join dds.item t4 on t2.item_id = t4.item_id where t2.status IN " +
            "('60','50') and t1.status in ('30','15') and t3.group_id = '<group>' and t4.supc = '<supc>' " +
            "and t1.opco_id = '<opco>'";
    public static final String GET_ACTIVE_CUSTOMER_EXCEPTIONS_FOR_GIVEN_OPCO_IN_GIVEN_STATUS = "select distinct t1" +
            ".excep_request_id from dds.exception_request t1 inner join dds.exception_request_line_item t2 on t1.excep_request_id = t2.excep_request_id  where t2.status IN " +
            "(<status>) and t1.status in ('30') and t1.opco_id = '<opco>' and t1.group_id is NULL order by t1.excep_request_id desc";
    public static final String GET__ACTIVE_GROUP_EXCEPTIONS_FOR_GIVEN_OPCO_IN_GIVEN_STATUS = "select distinct t1.excep_request_id " +
            "from dds.exception_request t1 inner join dds.exception_request_line_item t2 on t1.excep_request_id = t2.excep_request_id  where t2.status IN " +
            "(<status>) and t1.status in ('30') and t1.opco_id = '<opco>' and t1.group_id is NOT NULL order by t1.excep_request_id desc";
    public static final String SELECT_NON_EXCLUDED_CUSTOMERS_IN_GIVEN_OPCO = "select customer_sysco_id from dds.customer t1 left join" +
            " dds.customer_settings t2 on t1.customer_id = t2.customer_id where t1.status ='1' and t2.customer_id is null and t1.opco_id" +
            " ='<opco_id>' and t1.group_id is null";
    public static final String SELECT_NON_EXCLUDED_GROUP_CUSTOMERS_IN_GIVEN_OPCO = "select customer_sysco_id from dds" +
            ".customer t1 left join" +
            " dds.group_settings t2 on t1.group_id = t2.group_id where t1.status ='1' and t2.group_id is null and t1.opco_id" +
            " ='<opco_id>' and t1.group_id is not null order by t1.customer_sysco_id";
    public static final String SELECT_NON_EXCLUDED_ITEMS_IN_GIVEN_OPCO = "select supc from dds.item t1 left join" +
            " dds.item_settings t2 on t1.item_id = t2.item_id where t1.status ='1' and t2.item_id is null and " +
            "t1.opco_id ='<opco_id>' and t1.uom = 'CS'";
    public static final String SELECT_NON_EXCLUDED_ITEMS_IN_GIVEN_OPCO_AND_IN_GIVEN_CATEGORIES = "select supc from " +
            "dds.item t1 where t1.opco_id = '<opco_id>' and t1.category_id = '<cat_id>' and t1" +
            ".major_category_id ='<major_cat_id>' and t1.intermediate_category_id = '<inter_cat_id>' and t1.minor_category_id  = '<minor_cat_id>' " +
            " and t1.item_id not in (select item_id from dds.item_settings t2 where t2.status =1 and t2.modification_type =0)";
    // exceptions list filters
    public static final String UPDATE_SALES_CONSUL_DSM = "update dds.sales_consultant set dsm_id = '%s' where dsm_id = '%s'";
    public static final String GET_DSM_OPCOS_FILTER = "select customer.opco_id, opco.opco_name from dds.customer join dds.customer_sc_association as cus_sc on customer.customer_id = cus_sc.customer_id join dds.sales_consultant on sales_consultant.sc_id = cus_sc.sc_id join dds.opco on opco.opco_id = customer.opco_id where sales_consultant.dsm_id = '%s' group by customer.opco_id, opco.opco_name order by customer.opco_id";
    public static final String GET_DSM_SC_FILTER = "select array_agg(distinct customer.opco_id) as opcos, sales_consultant.sc_name, sales_consultant.sc_sysco_id from dds.customer join dds.customer_sc_association as cus_sc on customer.customer_id = cus_sc.customer_id join dds.sales_consultant on sales_consultant.sc_id = cus_sc.sc_id where sales_consultant.dsm_id = '%s' group by sc_sysco_id, sales_consultant.sc_name order by sales_consultant.sc_name";
    public static final String GET_MARKET_FILTER = "select market.market_name, market.market_id from dds.customer join dds.opco on customer.opco_id = opco.opco_id join dds.region on opco.region_id = region.region_id join dds.market on opco.market_id = market.market_id join dds.customer_sc_association as cus_sc on customer.customer_id = cus_sc.customer_id join dds.sales_consultant on cus_sc.sc_id = sales_consultant.sc_id %s group by market.market_name, market.market_id order by market.market_name";
    public static final String GET_REGION_FILTER = "select region.region_name, region.region_id, market.market_id from dds.customer join dds.opco on customer.opco_id = opco.opco_id join dds.region on opco.region_id = region.region_id join dds.market on opco.market_id = market.market_id join dds.customer_sc_association as cus_sc on customer.customer_id = cus_sc.customer_id join dds.sales_consultant on cus_sc.sc_id = sales_consultant.sc_id %s group by region.region_name, region.region_id, market.market_id order by region.region_name";
    public static final String GET_OPCO_FILTER = "select customer.opco_id, opco.opco_name, region.region_id, market.market_id from dds.customer join dds.opco on customer.opco_id = opco.opco_id join dds.region on opco.region_id = region.region_id join dds.market on opco.market_id = market.market_id join dds.customer_sc_association as cus_sc on customer.customer_id = cus_sc.customer_id join dds.sales_consultant on cus_sc.sc_id = sales_consultant.sc_id %s group by customer.opco_id, opco.opco_name, region.region_id, market.market_id order by customer.opco_id";
    public static final String GET_DSM_FILTER = "select array_agg(distinct customer.opco_id) as opcos, region.region_id, market.market_id, sales_consultant.dsm_id, sales_consultant.dsm_name from dds.customer join dds.opco on customer.opco_id = opco.opco_id join dds.region on opco.region_id = region.region_id join dds.market on opco.market_id = market.market_id join dds.customer_sc_association as cus_sc on customer.customer_id = cus_sc.customer_id join dds.sales_consultant on cus_sc.sc_id = sales_consultant.sc_id %s group by region.region_id, market.market_id, sales_consultant.dsm_id, sales_consultant.dsm_name order by sales_consultant.dsm_name::bytea";
    public static final String GET_SC_FILTER = "select array_agg(distinct customer.opco_id) as opcos, region.region_id, market.market_id, sales_consultant.dsm_id, sales_consultant.sc_sysco_id, sales_consultant.sc_name from dds.customer join dds.opco on customer.opco_id = opco.opco_id join dds.region on opco.region_id = region.region_id join dds.market on opco.market_id = market.market_id join dds.customer_sc_association as cus_sc on customer.customer_id = cus_sc.customer_id join dds.sales_consultant on cus_sc.sc_id = sales_consultant.sc_id %s group by region.region_id, market.market_id, sales_consultant.dsm_id, sales_consultant.sc_sysco_id, sales_consultant.sc_name order by sales_consultant.sc_name::bytea";
    public static final String GET_REGION_USER_OPCOS = "select opco_id_list from dds.opco join dds.region on opco.region_id = region.region_id where opco.opco_id = %s";
    public static final String GET_REGIONS_OF_MARKET = "select market.region_id_list from dds.market where market_id = (select market_id from dds.opco where opco_id = %s)";
    public static final String GET_OPCOS_OF_REGIONS = "select region.opco_id_list from dds.region where region_id in (%s)";

    //vacation-coverage
    public static final String SELECT_DRM_ID_WITH_NO_ASSIGNED_VACATION_COVERAGE = "select distinct sysco_id from dds" +
            ".user t1 inner join dds.user_user_role_association t2 on t1.user_id = t2.user_id inner join dds.user_role t3 on " +
            "t2.user_role_id = t3.user_role_id left join dds.vacation_coverage t4 on t1.user_id = t4.user_id where " +
            "t3.role_name = 'DRM' and t2.usbl='region' and t2.reference_id='<region_id>' and t2.status = 1 and t1" +
            ".user_id not in (select user_id from dds.vacation_coverage where status = 1)";
    public static final String SELECT_VACATION_COVERAGE_DETAILS_FOR_GIVEN_DRM_AND_REGION = "select * from dds" +
            ".vacation_coverage where user_id = '<drm_id>' and reference_id = '<region_id>' and usbl = '<usbl>'" +
            "  and status=1";
    public static final String SELECT_REGION_NAME_OF_GIVEN_REGION_ID = "SELECT region_name FROM dds.region where region_id = '<region_id>' and status =1";
    public static final String SELECT_ACTIVE_VACATION_COVERAGE_REGIONS_OF_USER = "select t1.region_name from dds" +
            ".region t1 inner join dds.vacation_coverage t2 on t1.region_id = t2.reference_id " +
            "where t2.status = 1 and t2.user_id = '<user_id>' and t2.usbl = 'region'";
    public static final String SELECT_DELETED_VACATION_COVERAGE_DETAILS_FOR_GIVEN_DRM_AND_REGION = "select * from dds" +
            ".vacation_coverage where user_id = '<drm_id>' and reference_id = '<region_id>' and usbl = '<usbl>'" +
            "  order by modified_date_time desc limit 1";
    public static final String SELECT_DRM_IDS = "select t2.user_id from dds.user t1 " +
            "inner join dds.user_user_role_association t2 on t1.user_id = t2.user_id inner join dds.user_role t3 on " +
            "t2.user_role_id = t3.user_role_id left join dds.vacation_coverage t4 on t1.user_id = t4.user_id where " +
            "t3.role_name = 'DRM' and t2.usbl='region' and t2.reference_id='<region_id>' and t2.status = 1";
    public static final String SELECT_GIVEN_DRM_ID_DATA_FROM_VACATION_COVERAGE_TABLE="SELECT * FROM dds.vacation_coverage where status=1 and  user_id=<drmID>";
    public static final String SELECT_SYSCO_ID_FOR_GIVEN_USER_ID="SELECT sysco_id FROM dds.user where user_id =<userID>";
    public static final String SELECT_OPCO_DETAILS_OF_GIVEN_OPCO = "SELECT * FROM dds.opco where opco_id = '<opco_id>'";
    public static final String SELECT_USER_IDS_FOR_GIVEN_ROLE_AND_USBL = "select distinct t1.sysco_id from dds.user " +
            "t1 inner join dds.user_user_role_association t2 on t1.user_id = t2.user_id inner join dds.user_role t3 " +
            "on t2.user_role_id = t3.user_role_id where t3.role_name = '<role>' and t2.status = 1 and t2.usbl = '<usbl>' and t2.reference_id = '<reference_id>' limit 1";

    //Queries to select SC's Customers
    public static final String SELECT_SC_ID_HAS_CUSTOMERS_OF_GIVEN_OPCO ="select distinct (sales_consultant.sc_id) from dds.customer join dds.customer_sc_association on customer.customer_id = customer_sc_association.customer_id join dds.sales_consultant on sales_consultant.sc_id = customer_sc_association.sc_id where customer.status = 1 and customer.opco_id='<opco_id>' and customer_sc_association.status = 1";
    public static final String SELECT_USER_ID_FOR_GIVEN_SC ="select user_id from dds.user where sysco_id = '<sc_sysco_id>'";
    public static final String ASSIGN_ONE_SC_CUSTOMERS_TO_DIFFERENT_SC = "update  dds.sales_consultant set sc_name='<new_sc_sysco_id>' , sc_sysco_id = '<new_sc_sysco_id>' where sc_id='<old_sc_user_id>'";
    public static final String SELECT_DETAILS_OF_A_ACTIVE_CUSTOMER_IN_A_GROUP_FOR_GIVEN_OPCO_AND_SC = "select table2.customer_sysco_id FROM dds.customer_sc_association as table1 join dds.customer as table2 on table1.customer_id = table2.customer_id where table1.sc_id='<sc_id>' and table2.opco_id='<opco_id>' and table2.status='1'";
    public static final String SELECT_SC_ID_OF_GIVEN_OPCO ="SELECT sc_id FROM dds.sales_consultant where opco_id = '<opco_id>' and status='1' limit 1";
    public static final String ASSIGN_CUSTOMERS_TO_GIVEN_OPCO ="Update dds.customer_sc_association set sc_id = '<sc_id>' where cus_sc_id in (SELECT cus_sc_id FROM dds.customer_sc_association where customer_id in (SELECT customer_id FROM dds.customer where opco_id='<opco_id>' and status = 1 ) limit 10)";
    public static final String SELECT_SC_ID_OF_GIVEN_USER ="SELECT sc_id FROM dds.sales_consultant where sc_sysco_id='<user_sysco_id>'";
    public static final String SELECT_CUSTOMERS_BELONG_TO_GIVEN_SC ="SELECT customer_sysco_id FROM dds.customer where opco_id='<opco_id>' and status = 1 and customer_id in (SELECT customer_id FROM dds.customer_sc_association where sc_id='<sc_id>' )";

    //Queries for large groups
    public static final String SELECT_GROUP_ID_FOR_LARGE_GROUP ="select distinct(group_id) from dds.customer where status=1 and group_id IS not null and opco_id='<opco_id>' limit 6";
    public static final String UPDATE_GROUP_ID_FOR_LARGE_GROUP ="UPDATE dds.customer SET group_id=null WHERE group_id='<group_id>'";
    public static final String UPDATE_CUSTOMER_IDS_FOR_LARGE_GROUP ="update dds.customer set group_id='<group_id>' where customer_id in (select customer_id from dds.customer where status=1 and group_id IS null and opco_id='<opco_id>' limit <limit>)";
    public static final String SELECT_CUSTOMER_ID_FOR_LARGE_GROUP ="select customer_sysco_id from dds.customer where group_id='<group_id>' and opco_id='<opco_id>' limit 1";
    public static final String SELECT_STATUS_OF_LINE_ITEM_DETAILS = "select status from dds.exception_request_line_item where excep_request_id = '<exception_request_id>'";
    public static final String LINE_ITEM_COUNT_FROM_ITEM_REQUEST_TABLE = "select count(excep_request_id) from dds.exception_request_line_item   where  excep_request_id='<exception_request_id>';";
    public static final String SELECT_STATUS_OF_REQUEST_DETAILS = "select status from dds.exception_request where excep_request_id = '<exception_request_id>'";
    public static final String CANCLE_EXISTING_EXCEPTIONS_REQUEST_DETAILS = "update dds.exception_request set status='50' where group_id='<group_id>' and status='30' and opco_id='<opco_id>'";
    public static final String GET_VALID_ITEM = "SELECT * FROM dds.item where opco_id='<opco_id>' and status='1' and uom='<uom>' limit <limit>";
    public static final String UPDATE_GROUP_ID_FOR_EXISTING_CUSTOMERS ="UPDATE dds.customer SET group_id='<group_id>' WHERE customer_sysco_id in (<customerID>) and opco_id = '<opco_id>'";
    public static final String SELECT_CUSTOMER_IDS_IN_GIVEN_GROUP ="select customer_sysco_id from dds.customer where group_id='<group_id>' and opco_id='<opco_id>'";

    public static final String GET_VALID_ITEM_SUPC = "SELECT item_id,supc FROM dds.item where opco_id='<opco_id>' and status='1' and uom='<uom>' and brand notnull limit <limit>";
    public static final String GET_BULK_ITEM_SETTING_DETAILS = "select item_settings_id,modification_type,notes,margin,is_bulk_upload,current_approve_threshold,current_reject_threshold, price_zone,renew_margin from dds.item_settings where item_id='<item_id>' and modification_type='<modification_type>' and status='1'";

    public static final String SELECT_ACTIVE_ITEM_SETTINGS_DETAILS_WITH_PZ = "select item_settings_id,modification_type,notes,margin,is_bulk_upload,current_approve_threshold,current_reject_threshold,price_zone,renew_margin,status from dds.item_settings where item_id='<item_id>' and modification_type='<modification_type>' and status='1' and price_zone = '<price_zone>'";
    public static final String SELECT_INACTIVE_ITEM_SETTINGS_DETAILS_WITH_PZ = "select item_settings_id,modification_type,notes,margin,is_bulk_upload,current_approve_threshold,current_reject_threshold,price_zone,renew_margin,status from dds.item_settings where item_id='<item_id>' and modification_type='<modification_type>' and status='0' and price_zone = '<price_zone>'";
    public static final String SELECT_ITEM_SETTINGS_DETAILS_WITH_ITEM_SETTINGS_ID = "select item_settings_id,modification_type,notes,margin,is_bulk_upload,current_approve_threshold,current_reject_threshold,price_zone,renew_margin,status from dds.item_settings where item_settings_id = '<item_settings_id>'";

    // Renewal margin
    public static final String UPDATE_ITEM_SETTING_RENEWAL_MARGIN = "update dds.item_settings set status =? where item_id ='<itemID>'and modification_type='3' and status =1";
    public static final String SELECT_ITEM_RENEW_MARGIN_SETTINGS_BY_SETTING_ID = "select opco.opco_id, opco.opco_name, market.market_id, market.market_name, region.region_id, region.region_name, margin, renew_margin, price_zone, item_settings.item_settings_id, item.item_id, item.supc, item.item_name, item_category.category_name, " +
            "item_major_category.major_category_name, item_intermediate_category.intermediate_category_name, item_minor_category.minor_category_name, item.brand from dds.item_settings left join dds.item on item.item_id = item_settings.item_id left join dds.opco on item.opco_id = opco.opco_id left join dds.market on opco.market_id = market.market_id " +
            "left join dds.region on region.region_id = opco.region_id left join dds.item_category on item_category.category_id = item.category_id left join  dds.item_major_category on item_major_category.major_category_id = item.major_category_id left join dds.item_intermediate_category " +
            "on item_intermediate_category.intermediate_category_id = item.intermediate_category_id left join dds.item_minor_category on item_minor_category.minor_category_id = item.minor_category_id where item_settings.status = 1 and item_settings.modification_type = %s and item_settings.item_settings_id = %s";
    public static final String SELECT_ITEM_DETAILS_OF_ITEM_SETTING_BY_STATUS="select current_approve_threshold,current_reject_threshold,notes,margin FROM qa.dds.item_settings where modification_type='<modification_type>' and item_id='<item_id>'and status =1 limit 1";
    public static final String SELECT_ITEM_RENEW_MARGIN_SETTING = "select current_approve_threshold,current_reject_threshold,notes,status,item_id,margin,renew_margin,modified_by,price_zone from dds.item_settings where item_id='<item_id>'and status='1' and modification_type='<modification_type>'";
    public static final String SELECT_ITEM_RENEW_MARGIN_SETTING_WITH_PZ = "select item_settings_id,current_approve_threshold,current_reject_threshold,notes,status,item_id,margin,renew_margin,modified_by,price_zone from dds.item_settings where item_id='<item_id>'and status='<status>' and modification_type='<modification_type>' and price_zone='<price_zone>'";
    public static final String SELECT_ITEM_RENEW_MARGIN_SETTING_FROM_ID = "select current_approve_threshold,current_reject_threshold,notes,status,item_id,margin,renew_margin,modified_by,price_zone from dds.item_settings where item_settings_id='<item_settings_id>'";

    public static final String SELECT_ITEM_ID_WITHOUT_ACTIVE_RENEW_MARGIN_SETTING = "select item_id from dds.item_settings where modification_type!='<modification_type>' and status='1' and renew_margin is null ";

    //Renewal Margin category
    public static final String GET_VALID_ITEM_CATEGORY_MAJOR_INTERMEDIATE_MINOR_IDS= "select dds.item_category.category_id,dds.item_major_category.major_category_id,dds.item_intermediate_category.intermediate_category_id,dds.item_minor_category.minor_category_id\n" +
            "from dds.item_category inner join dds.item_major_category on dds.item_category.category_id=dds.item_major_category.category_id\n" +
            "inner join dds.item_intermediate_category on dds.item_major_category.major_category_id=dds.item_intermediate_category.major_category_id\n" +
            "inner join dds.item_minor_category on dds.item_intermediate_category.intermediate_category_id=dds.item_minor_category.intermediate_category_id\n" +
            "where dds.item_category.status='1' and  dds.item_major_category.status='1' and dds.item_intermediate_category.status='1' and dds.item_minor_category.status='1' limit <limit> ";



    //Opco

    public static final String SELECT_OPCO_RENEWAL_MARGIN_SETTINGS = "select opco_exception_threshold.opco_exc_threshold_id, opco_exception_threshold.renew_margin, opco_exception_threshold.current_approve_threshold,opco_exception_threshold.current_reject_threshold, opco.opco_id, opco.opco_name, market.market_id, market.market_name, region.region_id, region.region_name from dds.opco left join dds.opco_exception_threshold " +
            "on opco.opco_id = opco_exception_threshold.opco_id left join dds.market on market.market_id = opco.market_id left join dds.region on region.region_id = opco.region_id where opco.opco_id = %s and opco_exception_threshold.modification_type = %s and opco_exception_threshold.status = 1 and opco_exception_threshold.price_zone  = 0";

    public static final String SELECT_ACTIVE_CATEGORY_SETTINGS_IN_GIVEN_TYPE = "select item_category_settings_id from qa.dds.item_category_settings where modification_type='<modification_type>' and status='1'";
    public static final String SELECT_ACTIVE_CATEGORY_SETTINGS_IN_GIVEN_TYPE_IN_ASC_ORDER = "select item_category_settings_id from dds.item_category_settings t1 left join dds.item_category t2 on t1.item_category_id = t2.category_id where " +
            "t1.modification_type='<modification_type>' and t1.status='1' and t1.item_category_type = 1 order by t1.opco_id ASC , t2.category_name ASC, t1.price_zone ASC";
    public static final String SELECT_ACTIVE_MAJOR_CATEGORY_SETTINGS_IN_GIVEN_TYPE_IN_ASC_ORDER = "select item_category_settings_id from dds.item_category_settings t1 join dds.item_major_category t2 on t1.item_category_id = t2.major_category_id join " +
            " dds.item_category t3 on t2.category_id = t3.category_id where t1.modification_type='<modification_type>' and t1.status='1' and t1.item_category_type = 2 order by t1.opco_id ASC , " +
            " t3.category_name ASC, t2.major_category_name ASC, t1.price_zone ASC";
    public static final String SELECT_ACTIVE_INTER_CATEGORY_SETTINGS_IN_GIVEN_TYPE_IN_ASC_ORDER = "select item_category_settings_id from dds.item_category_settings t1 " +
            "join dds.item_intermediate_category t2 on t1.item_category_id = t2.intermediate_category_id join dds.item_major_category t3 on t2.major_category_id = t3.major_category_id " +
            " join dds.item_category t4 on t3.category_id = t4.category_id where t1.modification_type='<modification_type>' and t1.status='1' and t1.item_category_type = 3 " +
            " order by t1.opco_id ASC ,  t4.category_name ASC, t3.major_category_name asc, t2.intermediate_category_name, t1.price_zone ASC";
    public static final String SELECT_ACTIVE_MINOR_CATEGORY_SETTINGS_IN_GIVEN_TYPE_IN_ASC_ORDER = "select item_category_settings_id from dds.item_category_settings t1 join dds.item_minor_category t2 on t1.item_category_id = t2.minor_category_id " +
            "join dds.item_intermediate_category t3 on t2.intermediate_category_id = t3.intermediate_category_id join dds.item_major_category t4 on t3.major_category_id = t4.major_category_id " +
            " join dds.item_category t5 on t4.category_id = t5.category_id  where t1.modification_type='<modification_type>' and t1" +
            ".status='1' and t1.item_category_type = 4 order by t1.opco_id ASC ,  t5.category_name ASC, t4.major_category_name asc, t3.intermediate_category_name asc, t2.minor_category_name ASC, t1.price_zone ASC";

    //NetCost Override

    public static final String DELETE_NET_COST_OVERRIDE_CATEGORY_SETTING = "DELETE FROM dds.item_category_netcost_settings WHERE status=1 and item_category_id='<category_id>' and item_category_type ='<category_type>' and opco_id IN  (19,67,38)";
    public static final String SELECT_NETCOST_OVERRIDE_CATEGORY_SETTING = "SELECT * FROM dds.item_category_netcost_settings WHERE status=1 and item_category_id='<category_id>' and item_category_type ='<category_type>' and opco_id = '<opco_id>' and modification_type ='<modification_type>' ";
    public static final String SELECT_NET_COST_OVERRIDE_CATEGORY_SETTING_IDS_FOR_GIVEN_CATEGORY = "Select item_category_netcost_settings_id from dds.item_category_netcost_settings where item_category_id  ='<category_id>' and item_category_type = '<type>' and status ='1'";
    public static final String SELECT_NET_COST_OVERRIDE_CATEGORY_SETTINGS_FOR_GIVEN_IDS = "select * from dds.item_category_netcost_settings where item_category_netcost_settings_id = '<id>' and status ='1'";
    public static final String SELECT_NETCOST_SETTING_FROM_ID_FOR_A_CATEGORY = "select item_category_netcost_settings_id, item_category_id , item_category_type , item_category_netcost_settings.opco_id , modification_type, margin,dollar_per_case,dollar_per_pound, " +
            "notes, item_category.category_name, opco.opco_name, item_category.category_id as category_id from dds.item_category_netcost_settings left join dds.item_category on item_category_netcost_settings.item_category_id = item_category.category_id " +
            "left join dds.opco on opco.opco_id = item_category_netcost_settings.opco_id where item_category_netcost_settings.item_category_type = 1 and item_category_netcost_settings.status = 1 and item_category_netcost_settings.item_category_netcost_settings_id = %s";
    public static final String SELECT_NETCOST_SETTING_FROM_ID_FOR_A_MAJOR_CATEGORY = "select item_category_netcost_settings_id, item_category_id as major_category_id, item_category_type , item_category_netcost_settings.opco_id , modification_type, " +
            "margin,dollar_per_case,dollar_per_pound, notes, item_category.category_name,item_major_category.major_category_name, opco.opco_name, item_category.category_id as category_id from dds.item_category_netcost_settings left join dds.item_major_category on " +
            "item_category_netcost_settings.item_category_id = item_major_category.major_category_id left join dds.item_category on item_major_category.category_id = item_category.category_id left join dds.opco on opco.opco_id = item_category_netcost_settings.opco_id " +
            "where item_category_netcost_settings.item_category_type = 2 and item_category_netcost_settings.status = 1 and item_category_netcost_settings.item_category_netcost_settings_id = %s";
    public static final String SELECT_NETCOST_SETTING_FROM_ID_FOR_A_INTER_CATEGORY = "select item_category_netcost_settings_id, item_category_id as inter_category_id, item_category_type , item_category_netcost_settings.opco_id , modification_type, margin,dollar_per_case,dollar_per_pound, " +
            "notes ,item_category.category_name, opco.opco_name, item_major_category.major_category_name, item_intermediate_category.intermediate_category_name,item_category.category_id as category_id, item_major_category.major_category_id as major_category_id  from " +
            "dds.item_category_netcost_settings left join dds.item_intermediate_category on item_category_netcost_settings.item_category_id = item_intermediate_category.intermediate_category_id left join dds.item_major_category on item_intermediate_category.major_category_id = item_major_category.major_category_id " +
            "left join dds.item_category on item_major_category.category_id = item_category.category_id left join dds.opco on opco.opco_id = item_category_netcost_settings.opco_id where item_category_netcost_settings.item_category_type = 3 and item_category_netcost_settings.status = 1 and item_category_netcost_settings.item_category_netcost_settings_id = %s";
    public static final String SELECT_NETCOST_SETTING_FROM_ID_FOR_A_MINOR_CATEGORY = "select item_category_netcost_settings_id, item_category_id as minor_category_id, item_category_type , item_category_netcost_settings.opco_id , modification_type, margin,dollar_per_case,dollar_per_pound, notes, item_category.category_name, opco.opco_name," +
            "item_major_category.major_category_name, item_intermediate_category.intermediate_category_name, " +
            "item_minor_category.minor_category_name, item_category.category_id as category_id, item_major_category.major_category_id as major_category_id, item_intermediate_category.intermediate_category_id as inter_category_id from " +
            "dds.item_category_netcost_settings left join  dds.item_minor_category on item_category_netcost_settings.item_category_id = item_minor_category.minor_category_id left join dds.item_intermediate_category on item_minor_category.intermediate_category_id = item_intermediate_category.intermediate_category_id " +
            "left join dds.item_major_category on item_intermediate_category.major_category_id = item_major_category.major_category_id left join dds.item_category on item_major_category.category_id = item_category.category_id left join dds.opco on opco.opco_id = item_category_netcost_settings.opco_id " +
            "where item_category_netcost_settings.item_category_type = 4 and item_category_netcost_settings.status = 1 and item_category_netcost_settings.item_category_netcost_settings_id = %s";
    public static final String SELECT_ACTIVE_NETCOST_SETTINGS_OF_CATEGORY_TYPE_IN_DEFAULT_ORDER = "select item_category_netcost_settings_id from dds.item_category_netcost_settings t1 left join dds.item_category t2 on t1.item_category_id = t2.category_id where t1.status='1' and t1.item_category_type = 1 order by t1.opco_id ASC ,t2.category_name ASC";
    public static final String SELECT_ACTIVE_NETCOST_SETTINGS_OF_MAJOR_CATEGORY_TYPE_IN_DEFAULT_ORDER = "select item_category_netcost_settings_id from dds.item_category_netcost_settings t1 join dds.item_major_category t2 on t1.item_category_id = t2.major_category_id join " +
            "  dds.item_category t3 on t2.category_id = t3.category_id where t1.status='1' and t1.item_category_type = 2 order by t1.opco_id ASC ,t3.category_name ASC, t2.major_category_name asc";
    public static final String SELECT_ACTIVE_NETCOST_SETTINGS_OF_INTER_CATEGORY_TYPE_IN_DEFAULT_ORDER = "select item_category_netcost_settings_id from dds.item_category_netcost_settings t1 join dds.item_intermediate_category t2 on t1.item_category_id = t2.intermediate_category_id join dds.item_major_category t3 on t2.major_category_id = t3.major_category_id " +
            "join dds.item_category t4 on t3.category_id = t4.category_id where  t1.status='1' and t1.item_category_type = 3 order by t1.opco_id ASC ,t4.category_name ASC, t3.major_category_name asc, t2.intermediate_category_name";
    public static final String SELECT_ACTIVE_NETCOST_SETTINGS_OF_MINOR_CATEGORY_TYPE_IN_DEFAULT_ORDER = "select item_category_netcost_settings_id from dds.item_category_netcost_settings t1 join dds.item_minor_category t2 on t1.item_category_id = t2.minor_category_id " +
            " join dds.item_intermediate_category t3 on t2.intermediate_category_id = t3.intermediate_category_id join dds.item_major_category t4 on t3.major_category_id = t4.major_category_id join dds.item_category t5 on t4.category_id = t5.category_id  where t1 " +
            ".status='1' and t1.item_category_type = 4 order by t1.opco_id ASC ,t5.category_name ASC, t4.major_category_name asc, t3.intermediate_category_name asc, t2.minor_category_name asc";
    public static final String SELECT_ALL_ACTIVE_NET_COST_OVERRIDE_CATEGORY_SETTING_IDS = "Select item_category_netcost_settings_id from dds.item_category_netcost_settings where status ='1'";
    public static final String SELECT_ACTIVE_NET_COST_OVERRIDE_CATEGORY_SETTING_IDS_IN_GIVEN_ORDER = "select item_category_netcost_settings_id from dds.item_category_netcost_settings t1 where t1.status='1' order by %s %s";
    public static final String SELECT_NET_COST_OVERRIDE_CATEGORY_SETTING_FOR_GIVEN_CATEGORY_TYPE = "Select * from dds.item_category_netcost_settings where status ='<status>' and item_category_type = <type> ";
    public static final String SELECT_OPCOS_OF_ACTIVE_CATEGORY_NETCOST_SETTING_FOR_GIVEN_CATEGORY = "select item_category_id, item_category_type, opco_id from dds.item_category_netcost_settings where status = 1 and item_category_type = <type> and item_category_id = <id> ";
    public static final String UPDATE_NET_COST_OVERRIDE_CATEGORY_SETTING_TO_INACTIVE_FOR_GIVEN_CATEGORY = "Update dds.item_category_netcost_settings set status=0 where item_category_id = '<id>' and item_category_type = <type>";
    public static final String SELECT_ALL_ACTIVE_NET_COST_OVERRIDE_CATEGORY_SETTING_ID_FOR_GIVEN_CATEGORY_GIVEN_OPCO = "SELECT item_category_netcost_settings_id FROM dds.item_category_netcost_settings where item_category_id ='<category_id>' and status ='1' and item_category_type ='<category_type>' and opco_id ='<opco>'";
    public static final String SELECT_STATUS_OF_NET_COST_OVERRIDE_CATEGORY_SETTING_ID_FOR_GIVEN_CATEGORY_GIVEN_OPCO = "SELECT status FROM dds.item_category_netcost_settings where item_category_id ='<category_id>' and status ='1' and item_category_type ='<category_type>' and opco_id ='<opco>'";
    public static final String SELECT_STATUS_OF_NET_COST_OVERRIDE_CATEGORY_SETTING_FOR_GIVEN_SETTING_ID= "SELECT status FROM dds.item_category_netcost_settings where item_category_netcost_settings_id = '<settingID>'";
    public static final String SELECT_NET_COST_OVERRIDE_CATEGORY_SETTING_IDS_OF_EACH_OPCO_FOR_GIVEN_CATEGORY_AND_MODIFICATION_TYPE = "Select item_category_netcost_settings_id,opco_id from dds.item_category_netcost_settings where item_category_id ='<category_id>' and item_category_type = '<type>' and status ='1' and modification_type = <modType>";
    public static final String SELECT_NET_COST_OVERRIDE_CATEGORY_SETTINGS_FOR_GIVEN_ID = "select * from dds.item_category_netcost_settings where item_category_netcost_settings_id = '<id>'";

    //Net cost Override Item Setting
    public static final String SELECT_NET_COST_SETTING_DATA_FOR_GIVEN_ITEM = "SELECT * FROM dds.item_netcost_settings where item_id =(SELECT item_id  FROM dds.item where supc ='<supc>' and opco_id ='019' and uom = '<uom>') and status ='1'";
    public static final String UPDATE_EXISTING_NET_COST_ITEM_SETTING_FOR_GIVEN_ITEM = "UPDATE dds.item_netcost_settings SET status = 0 WHERE item_id =(SELECT item_id  FROM dds.item where supc ='<supc>' and opco_id ='019' and uom = '<uom>');";
    public static final String SELECT_ITEM_ID_FOR_GIVEN_SUPC_OPCO_UOM = "SELECT item_id  FROM dds.item where opco_id ='<opco>' and uom ='<uom>' and status ='1' and supc = '<supc>'  ";
    public static final String DELETE_GIVE_ITEM_ID_FROM_ITEM_SETTING = "delete from dds.item_settings where item_id ='<itemID>'";
    public static final String DELETE_GIVE_ITEM_ID_FROM_ITEM_NETCOST_SETTING = "delete from dds.item_netcost_settings where item_id ='<itemID>'";
    public static final String DELETE_GIVE_ITEM_ID_FROM_ITEM = "delete from dds.item where item_id ='<itemID>'";
    public static final String SELECT_NET_COST_SETTING_DATA_FOR_GIVEN_ITEM_OPCO_UOM = "SELECT * FROM dds.item_netcost_settings where item_id =(SELECT item_id  FROM dds.item where supc ='<supc>' and opco_id ='<opco>' and uom = '<uom>') and status ='1'";
    public static final String SELECT_DELETED_ITEM_NETCOST_SETTING_FROM_ID = "SELECT * FROM dds.item_netcost_settings where item_netcost_settings_id = %s";
    public static final String SELECT_ALL_ACTIVE_ITEM_NET_COST_OVERRIDE_SETTING_IDS = "SELECT item_netcost_settings_id FROM dds.item_netcost_settings where status ='1'";
    public static final String SELECT_ITEM_NET_COST_SETTINGS_IDS_IN_DEFAULT_ORDER = "select item_netcost_settings_id FROM dds.item_netcost_settings as table1 join dds.item as table2 on table1.item_id = table2.item_id where table1.status='1' order by table2.opco_id ASC,table2.supc ASC";
    public static final String SELECT_ACTIVE_ITEM_NET_COST_SETTING_DATA_FOR_GIVEN_ID = "select item_netcost_settings_id, item.opco_id , modification_type, margin,dollar_per_case,dollar_per_pound,netcost_override, item_netcost_settings.notes, item_netcost_settings.status , " +
            "item_netcost_settings.created_by,item_netcost_settings.created_date_time ,item_netcost_settings.is_bulk_upload ,item_netcost_settings.modified_by ,item_netcost_settings.modified_date_time , item_category.category_name, opco.opco_name, item.item_id, item.supc ,item.item_name ,item.brand ,item.uom," +
            "item.ship_split_only ,item.catch_weight_indicator,item_major_category.major_category_name, item_intermediate_category.intermediate_category_name, item_minor_category.minor_category_name, item.category_id , item.major_category_id , item.intermediate_category_id , item.minor_category_id " +
            "from  dds.item_netcost_settings left join dds.item on item.item_id = item_netcost_settings.item_id left join  dds.item_minor_category on item.minor_category_id = item_minor_category.minor_category_id left join dds.item_intermediate_category on " +
            "item.intermediate_category_id = item_intermediate_category.intermediate_category_id left join dds.item_major_category on item.major_category_id = item_major_category.major_category_id left join dds.item_category on item.category_id = item_category.category_id " +
            "left join dds.opco on opco.opco_id = item.opco_id where item_netcost_settings.item_netcost_settings_id = '<settingsId>' and item_netcost_settings.status = 1 ";
    public static final String SELECT_ACTIVE_NET_COST_OVERRIDE_ITEM_SETTING_IDS_IN_GIVEN_ORDER = "select item_netcost_settings_id, item.opco_id , modification_type, margin,dollar_per_case,dollar_per_pound,netcost_override, item_netcost_settings.notes, item_netcost_settings.status , " +
            " item_netcost_settings.created_by,item_netcost_settings.created_date_time ,item_netcost_settings.is_bulk_upload ,item_netcost_settings.modified_by ,item_netcost_settings.modified_date_time , item_category.category_name, item.item_id, item.supc ,item.item_name ,item.brand , " +
            " item.ship_split_only ,item.catch_weight_indicator,item_major_category.major_category_name, item_intermediate_category.intermediate_category_name, item_minor_category.minor_category_name, item.category_id , item.major_category_id , item.intermediate_category_id , item.minor_category_id  " +
            " from  dds.item_netcost_settings left join dds.item on item.item_id = item_netcost_settings.item_id left join  dds.item_minor_category on item.minor_category_id = item_minor_category.minor_category_id left join dds.item_intermediate_category on " +
            " item.intermediate_category_id = item_intermediate_category.intermediate_category_id left join dds.item_major_category on item.major_category_id = item_major_category.major_category_id left join dds.item_category on item.category_id = item_category.category_id " +
            " where item_netcost_settings.status = 1  order by %s %s";
    public static final String UPDATE_EXISTING_NET_COST_ITEM_SETTING_FOR_GIVEN_ITEM_UOM_OPCO = "UPDATE dds.item_netcost_settings SET status = 0 WHERE item_id =(SELECT item_id  FROM dds.item where supc ='<supc>' and opco_id ='<opco>' and uom = '<uom>') and status = 1";
    public static final String SELECT_STATUS_OF_NET_COST_OVERRIDE_ITEM_SETTING_FOR_GIVEN_SETTING_ID= "SELECT * FROM dds.item_netcost_settings where item_netcost_settings_id  = '<settingID>'";
    public static final String SELECT_ACTIVE_ITEM_NET_COST_SETTING_IDS_FOR_GIVEN_ITEM_AND_TYPE = "SELECT item_netcost_settings_id FROM dds.item_netcost_settings where status ='1' and item_id = (SELECT item_id FROM dds.item where supc ='<supc>' and opco_id ='<opco>' and uom = '<uom>' and status=1) and modification_type = <type>";

    //Limit Exception Creation
    public static final String SELECT_NON_EXCLUDED_CUSTOMERS_IN_GIVEN_OPCO_WITH_NO_ACTIVE_EXCEPTIONS = "select customer_sysco_id from dds.customer where customer_id not in (select customer_group_id from dds.exception_creation_throttle where status=1 " +
            "and is_group_exception=false) and opco_id = '<opco>' and status=1 and group_id is null and customer_id not in (select customer_id from dds.customer_settings where modification_type=0 and status=1) limit <limit>";
    public static final String SELECT_NON_EXCLUDED_GROUP_CUSTOMERS_IN_GIVEN_OPCO_WITH_NO_ACTIVE_EXCEPTIONS = "select customer_sysco_id from dds.customer where group_id not in (select customer_group_id from dds.exception_creation_throttle where status=1 " +
            "and is_group_exception=true) and opco_id = '<opco>' and status=1 and group_id is not null and group_id not in (select group_id from dds.group_settings where modification_type=0 and status=1) limit <limit>";
    public static final String SELECT_NON_EXCLUDED_ITEMS_IN_GIVEN_OPCO_AND_IN_GIVEN_CATEGORIES_WITH_NO_ACTIVE_EXCEPTIONS = "select supc from dds.item where item_id not in (select item_id from dds.exception_creation_throttle where status=1) and opco_id = '<opco>' and status=1 " +
            "and category_id = '<cat_id>' and major_category_id ='<major_cat_id>' and intermediate_category_id = '<inter_cat_id>' and minor_category_id  = '<minor_cat_id>' and item_id not in (select item_id from dds.item_settings  where status =1 and modification_type =0) limit <limit>";
    public static final String SELECT_DATA_FROM_EXCEPTION_THROTTLE_TABLE_FOR_GIVEN_CUSTOMER_ITEM_AND_DATE = "select * from dds.exception_creation_throttle where status=1 and customer_group_id = '<customer_id>' and item_id = '<item_id>' and created_date = '<date>'";
    public static final String SELECT_EXCLUDED_ITEM_IN_GIVEN_OPCO_AND_PZ = "select supc from dds.item where item_id in (select item_id from dds.item_settings where status=1 and modification_type=0 and price_zone='<priceZone>') and opco_id = '<opco>' and status=1 limit <limit>";
    public static final String UPDATE_EXCEPTION_COUNT_IN_EXCEPTION_THROTTLE_TABLE = "Update dds.exception_creation_throttle set exception_count = <throttle_limit> where exception_creation_throttle_id = '<throttle_id>'";
    public static final String UPDATE_CREATED_DATE_IN_EXCEPTION_THROTTLE_TABLE = "Update dds.exception_creation_throttle set created_date = '<date>' where exception_creation_throttle_id = '<throttle_id>'";
    public static final String SELECT_DATA_FROM_EXCEPTION_THROTTLE_TABLE_FOR_THROTTLE_ID = "select * from dds.exception_creation_throttle where exception_creation_throttle_id = '<throttle_id>'";
    public static final String UPDATE_STATUS_IN_EXCEPTION_THROTTLE_TABLE = "Update dds.exception_creation_throttle set status = '<status>' where exception_creation_throttle_id = '<throttle_id>'";
    public static final String SELECT_NON_EXCLUDED_GROUP_IN_GIVEN_OPCO_FOR_GIVEN_CUSTOMER_COUNT_AND_HAVING_NO_ACTIVE_EXCEPTIONS = "select group_id from dds.customer where group_id not in (select customer_group_id from dds.exception_creation_throttle where status=1 " +
            " and is_group_exception=true) and opco_id = '<opco>' and status=1 and group_id is not null and group_id not in (select group_id from dds.group_settings where modification_type=0 and status=1) group by group_id having count(*) > <customer_count> ";
    public static final String DELETE_RECORDS_IN_EXCEPTION_THROTTLE_TABLE_CREATED_BY_GIVEN_USER = "Delete from dds.exception_creation_throttle where created_by = '<created_user>'";
    public static final String DELETE_RECORDS_IN_EXCEPTION_THROTTLE_TABLE_FOR_GIVEN_CUSTOMER_ID = "Delete from dds.exception_creation_throttle where customer_group_id = '<cust_grp_id>' and status = 1";
    public static final String SELECT_FLOOR_PRICE_FROM_EXCEPTION_REQUEST_LINEITEM= "select floor_price from dds.exception_request_line_item where excep_request_id='<exception_request_id>'";
    public static final String SELECT_CUSTOMERS_NOT_ASSIGNED_TO_GIVEN_GROUP = "select customer_sysco_id from dds.customer where group_id is not null and status=1 and opco_id='<opco_id>' and group_id != '<group_id>' limit 3";

    //Price Zone Exclusion
    public static final String SELECT_ACTIVE_CATEGORY_SETTING_FOR_GIVEN_CATEGORY_OPCO_AND_PRICE_ZONE = "select * from dds.item_category_settings where modification_type= %s and item_category_id = %s and item_category_type = %s and opco_id = %s and price_zone = %s and status = 1";
    public static final String DELETE_CATEGORY_SETTING_OF_GIVEN_CATEGORY_AND_OPCO = "UPDATE dds.item_category_settings SET status = 0 WHERE status=1 and item_category_id=%s and item_category_type = %s and opco_id = %s";
    public static final String SELECT_CUSTOMER_SETTINGS_FOR_GIVEN_CUSTOMER_AND_PRICE_ZONE = "select * from dds.customer_settings where customer_id = '<cust_ref_id>' and price_zone = <price_zone> and status = 1";
    public static final String SELECT_ACTIVE_THRESHOLD_SETTING_FOR_GIVEN_CUSTOMER = "select * from dds.customer_settings where customer_id = '<cust_ref_id>' and modification_type = '1' and status = '1'";
    public static final String UPDATE_SETTINGS_TO_INACTIVE_FOR_GROUP = "update dds.group_settings t1 set status = 0 where t1.group_id = '<group_id>' and t1.status = 1";
    public static final String SELECT_GROUP_SETTINGS_FOR_GIVEN_GROUP_AND_PRICE_ZONE = "select * from dds.group_settings where group_id = '<group_ref_id>' and price_zone = <price_zone> and status = 1";
    public static final String SELECT_ACTIVE_THRESHOLD_SETTING_FOR_GIVEN_GROUP = "select * from dds.group_settings where group_id = '<group_ref_id>' and modification_type = '1' and status = '1'";
    public static final String SELECT_ACTIVE_GROUP_SETTINGS_DETAILS_WITH_PRICE_ZONE = "select * from dds.group_settings where group_id = '<group_ref_id>' and modification_type = '<modification_type>' and status = '1' and price_zone = '<price_zone>'";
    public static final String SELECT_INACTIVE_GROUP_SETTINGS_DETAILS_WITH_PRICE_ZONE = "select * from dds.group_settings where group_id = '<group_ref_id>' and modification_type = '<modification_type>' and status = '0' and price_zone = '<price_zone>'";
    public static final String SELECT_INACTIVE_CUSTOMER_SETTINGS_DETAILS_WITH_PZ = "select * from dds.customer_settings where customer_id = '<cust_id>' and modification_type = '<modification_type>' and status = '0' and price_zone = '<price_zone>'";

    //bulk item net cost
    public static final String SELECT_BULK_NET_COST_UPLOAD_SETTING_FOR_GIVEN_FILENAME = "select * from dds.settings_upload where file_name ='<name>' and uploaded_by = '<user_id>'";
    public static final String SELECT_BULK_NET_COST_UPLOAD_SETTING_FOR_GIVEN_UPLOAD_ID = "select * from dds.settings_upload where settings_upload_id ='<id>'";
    public static final String SELECT_BULK_NET_COST_UPLOAD_RECORDS_FOR_GIVEN_UPLOAD_ID_AND_ITEM = "select * from dds.settings_upload_items where settings_upload_id = <upload_id> and supc = '<supc>' and uom = '<uom>' and opco_id = '<opco>'";
    public static final String SELECT_BULK_NET_COST_UPLOAD_RECORDS_FOR_GIVEN_UPLOAD_ID_ITEM_AND_IS_DELETION = "select * from dds.settings_upload_items where settings_upload_id = <upload_id> and supc = '<supc>' and uom = '<uom>' and opco_id = '<opco>' and is_delete = <is_deletion>";
    public static final String SELECT_BULK_NET_COST_UPLOAD_RECORDS_FOR_GIVEN_UPLOAD_ID_ITEM_AND_TYPE = "select * from dds.settings_upload_items where settings_upload_id = <upload_id> and supc = '<supc>' and uom = '<uom>' and opco_id = '<opco>' and modification_type = '<type>'";
    public static final String SELECT_BULK_NET_COST_UPLOAD_RECORDS_FOR_GIVEN_UPLOAD_ID_AND_NOTE = "select * from dds.settings_upload_items where settings_upload_id = <upload_id> and notes = '<note>'";
    public static final String SELECT_BULK_NET_COST_UPLOAD_RECORDS_COUNT_FOR_GIVEN_UPLOAD_ID = "select count(*) from dds.settings_upload_items where settings_upload_id = <upload_id>";

    //Item Settings - Price Zone
    public static final String UPDATE_ITEM_SETTING_TO_INACTIVE = "update dds.item_settings set status = 0 where item_id = '<itemID>' and status = 1";
    public static final String SELECT_ITEM_ID_FOR_GIVEN_SUPC_OPCO = "select item_id from dds.item where status = 1 and opco_id = '<opco>' and supc = '<supc>' and uom = '<uom>'";
    public static final String SELECT_ITEM_SETTING_DETAILS_FOR_GIVEN_ITEM_PRICE_ZONE = "select item_settings_id,modification_type,notes,margin,is_bulk_upload,current_approve_threshold,current_reject_threshold, price_zone,renew_margin,status from dds.item_settings where item_id='<item_id>' and status='1' and price_zone = '<price_zone>'";
    public static final String SELECT_ITEM_SETTING_STATUS_FOR_GIVEN_SETTING_ID = "select * from dds.item_settings where item_settings_id='<setting_id>'";
    public static final String SELECT_ITEM_SETTING_DETAILS_FOR_GIVEN_SETTING_ID = "select item_settings_id,modification_type,notes,margin,is_bulk_upload,current_approve_threshold,current_reject_threshold, price_zone,renew_margin,status from dds.item_settings where item_settings_id='<setting_id>'";

    //Opco Price Zone query
    public static final String UPDATE_OPCO_SINGLE_PZ_THRESHOLD_INACTIVE_FOR_GIVEN_OPCO = "update dds.opco_exception_threshold set status = 0 where opco_id = %s and price_zone != 0 and status ='1' and modification_type ='1'";
    public static final String UPDATE_OPCO_ALL_PZ_THRESHOLD_INACTIVE_FOR_GIVEN_OPCO = "update dds.opco_exception_threshold set status = 0 where opco_id = %s and price_zone = 0 and status ='1' and modification_type ='1'";
    public static final String SELECT_OPCO_SETTING_RECORD_FOR_GIVEN_OPCO_PZ = "select * from dds.opco_exception_threshold where opco_id=%s and status=%s and modification_type=%s and price_zone = %s";
    public static final String SELECT_OPCO_SETTING_ID_FOR_OPCO_019_PZ_0 = "select opco_exc_threshold_id FROM dds.opco_exception_threshold where modification_type = %s and opco_id ='019' and price_zone ='0' order by modified_date_time desc limit 1";
    public static final String UPDATE_STATUS_ACTIVE_FOR_GIVEN_OPCO_SETTING_ID = "Update dds.opco_exception_threshold  set status =1 where opco_exc_threshold_id = %s";

    private SQLQueries() {

    }


}
